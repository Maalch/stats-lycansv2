import{r as R,j as e}from"./index-BLk8EHOF.js";import{q as U,t as Z,R as L,p as B,T as G,B as q,C as O,X as $,Y as K,o as M}from"./useRawGameData-BobySaES.js";import{l as ee,a as S}from"./api-DftpR04q.js";import{F as I}from"./FullscreenChart-BzSIIquk.js";import{P as se,a as te}from"./PieChart-9K1B8ekb.js";import{L as Y}from"./Legend-BQbnY_jh.js";function ae(){const{data:l,isLoading:F,error:k}=U(),{data:x,isLoading:N,error:E}=Z();return{campWinStats:R.useMemo(()=>{if(!l||l.length===0||!x||x.length===0)return null;const g=s=>s?s.split(",").map(t=>t.trim()).filter(Boolean):[],a=(s,t,n)=>s[t]&&s[t][n]||"Villageois",r=(s,t)=>t&&t.trim()!==""?g(t).some(u=>u.toLowerCase()===s.toLowerCase()):!1,o=(s,t)=>s===t||s==="Traître"&&t==="Loups",d={};x.forEach(s=>{const t=s.Game;if(!t)return;d[t]||(d[t]={});const n=(p,h)=>{p&&p.trim()&&(d[t][p.trim()]=h)},u=s.Loups;u&&g(u).forEach(p=>{d[t][p]="Loups"}),n(s.Traître,"Traître"),n(s["Idiot du village"],"Idiot du Village"),n(s.Cannibale,"Cannibale"),n(s.Espion,"Espion"),n(s["La Bête"],"La Bête"),n(s["Chasseur de primes"],"Chasseur de primes"),n(s.Vaudou,"Vaudou");const j=s.Agent;j&&g(j).forEach(p=>{d[t][p]="Agent"});const w=s.Scientifique;w&&g(w).forEach(p=>{d[t][p]="Scientifique"});const b=s.Amoureux;b&&g(b).forEach(p=>{d[t][p]="Amoureux"})});const i={},m={},c={};let A=0;l.forEach(s=>{const t=s.Game,n=s["Rôles solo"],u=s["Camp victorieux"],j=s["Liste des joueurs"],w=s["Liste des gagnants"];if(n&&n.toString().trim()!==""&&g(n.toString()).forEach(p=>{const h=p.trim();h!==""&&(i[h]||(i[h]=0),i[h]++)}),u&&u.trim()!==""&&(A++,m[u]||(m[u]=0),m[u]++),t&&j&&u&&w){const b=g(j),p=new Set;b.forEach(h=>{const v=h.trim();if(v){const C=a(d,t,v);p.add(C)}}),p.forEach(h=>{c[h]||(c[h]={totalGames:0,wins:0,winRate:0,players:{}}),c[h].totalGames++}),p.forEach(h=>{o(h,u)&&c[h].wins++}),b.forEach(h=>{const v=h.trim();if(v){const C=a(d,t,h);c[C].players[v]||(c[C].players[v]={games:0,wins:0,winRate:0}),c[C].players[v].games++,r(v,w)&&c[C].players[v].wins++}})}}),Object.keys(c).forEach(s=>{c[s].totalGames>0&&(c[s].winRate=parseFloat((c[s].wins/c[s].totalGames*100).toFixed(2))),Object.keys(c[s].players).forEach(t=>{const n=c[s].players[t];n.games>0&&(n.winRate=parseFloat((n.wins/n.games*100).toFixed(2)))})});const P=[];Object.keys(m).forEach(s=>{P.push({camp:s,wins:m[s],winRate:(m[s]/A*100).toFixed(2)})}),P.sort((s,t)=>t.wins-s.wins);const J=Object.keys(c).map(s=>({camp:s,totalGames:c[s].totalGames,winRate:c[s].winRate.toFixed(2)})),_=new Set;Object.keys(c).forEach(s=>{Object.keys(c[s].players).forEach(t=>{_.add(t)})});const H=_.size,V=[];Object.keys(i).forEach(s=>{V.push({soloRole:s,appearances:i[s]})}),V.sort((s,t)=>t.appearances-s.appearances);const f={},y={};l.forEach(s=>{const t=s["Type de victoire"],n=s["Camp victorieux"];t&&t.trim()!==""&&n&&n.trim()!==""&&(f[t]||(f[t]=0),f[t]++,y[t]||(y[t]={}),y[t][n]||(y[t][n]=0),y[t][n]++)});const W=new Set;Object.values(y).forEach(s=>{Object.keys(s).forEach(t=>W.add(t))});const X=Object.keys(f).map(s=>{const t={type:s,count:f[s],percentage:(f[s]/A*100).toFixed(1)},n=y[s]||{};return W.forEach(u=>{const j=n[u]||0,w=f[s]>0?(j/f[s]*100).toFixed(1):"0.0";t[u]=j,t[`${u}_percentage`]=w}),t});X.sort((s,t)=>t.count-s.count);const Q=Array.from(W).sort();return{totalGames:A,campStats:P,soloCamps:V,campAverages:J,totalPlayersAnalyzed:H,victoryTypes:X,winningCamps:Q}},[l,x]),isLoading:F||N,errorInfo:k||E}}const re="#607D8B";function pe(){const{campWinStats:l,isLoading:F,errorInfo:k}=ae(),x=R.useMemo(()=>l?.campAverages?l.campAverages.map(a=>({...a,winRateNum:parseFloat(a.winRate)})).sort((a,r)=>r.winRateNum-a.winRateNum):[],[l]),N=R.useMemo(()=>l?.campStats?.map(a=>({...a,winRateNum:typeof a.winRate=="string"?parseFloat(a.winRate):a.winRate}))||[],[l]),E=R.useMemo(()=>{if(!N.length)return[];const a=5;let r=0;const o=[],d=[];return N.forEach(i=>{i.winRateNum<a?(r+=i.winRateNum,o.push(i)):d.push(i)}),r>0&&d.push({camp:"Autres",wins:o.reduce((i,m)=>i+m.wins,0),winRate:r.toFixed(1),winRateNum:r,_details:o}),d},[N]),T=R.useMemo(()=>x.length?x.slice().filter(a=>a.camp!=="Villageois"&&a.camp!=="Loups").sort((a,r)=>r.totalGames-a.totalGames):[],[x]),D=R.useMemo(()=>l?.victoryTypes?l.victoryTypes.map(a=>({...a,percentageNum:parseFloat(a.percentage)})):[],[l?.victoryTypes]),z=F,g=k;return z?e.jsx("div",{className:"donnees-attente",children:"Chargement des statistiques des camps..."}):g?e.jsxs("div",{className:"donnees-probleme",children:["Erreur: ",g]}):l?e.jsxs("div",{className:"lycans-camps-container",children:[e.jsx("h2",{children:"Statistiques des Camps"}),l&&e.jsxs("div",{className:"lycans-resume-conteneur",children:[e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Camps Analysés"}),e.jsx("div",{className:"lycans-valeur-principale",children:l.campAverages?.length||0}),e.jsx("p",{children:"camps différents"})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Joueurs Évalués"}),e.jsx("div",{className:"lycans-valeur-principale",children:l.totalPlayersAnalyzed||0}),e.jsx("p",{children:"joueurs analysés"})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Total Parties"}),e.jsx("div",{className:"lycans-valeur-principale",children:l?.totalGames||0}),e.jsx("p",{children:"parties analysées"})]})]}),e.jsxs("div",{className:"lycans-graphiques-groupe",children:[l&&E.length>0&&e.jsx(e.Fragment,{children:e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsx("h3",{children:"Répartition des Victoires par Camp"}),e.jsxs("p",{className:"lycans-stats-info",children:["Distribution des victoires sur ",l.totalGames," parties"]}),e.jsx("div",{style:{height:450},children:e.jsx(L,{width:"100%",height:"100%",children:e.jsxs(se,{children:[e.jsx(te,{data:E,cx:"50%",cy:"50%",labelLine:!1,outerRadius:140,fill:"#8884d8",dataKey:"winRateNum",nameKey:"camp",label:({camp:a,winRate:r})=>a==="Autres"?`Autres: ${r}%`:`${a}: ${r}%`,children:E.map((a,r)=>e.jsx(B,{fill:a.camp==="Autres"?ee:S[a.camp]||re},`cellule-camp-${r}`))}),e.jsx(G,{content:({active:a,payload:r})=>{if(a&&r&&r.length>0){const o=r[0].payload;if(o.camp==="Autres"&&o._details){const d=[...o._details].sort((i,m)=>m.winRateNum-i.winRateNum);return e.jsxs("div",{style:{background:"var(--bg-secondary)",color:"var(--text-primary)",padding:12,borderRadius:8,border:"1px solid var(--border-color)"},children:[e.jsx("div",{children:e.jsx("strong",{children:"Autres"})}),e.jsx("div",{children:d.map((i,m)=>e.jsxs("div",{children:[i.camp,": ",i.wins," victoires (",i.winRate,"%)"]},m))}),e.jsxs("div",{style:{marginTop:4,fontWeight:"bold"},children:["Total: ",o.wins," victoires (",o.winRate,"%)"]})]})}return e.jsxs("div",{style:{background:"var(--bg-secondary)",color:"var(--text-primary)",padding:12,borderRadius:8,border:"1px solid var(--border-color)"},children:[e.jsx("div",{style:{fontWeight:"bold",marginBottom:4},children:o.camp}),e.jsxs("div",{children:["Victoires: ",o.wins]}),e.jsxs("div",{children:["Taux de victoire: ",o.winRate,"%"]})]})}return null}}),e.jsx(Y,{})]})})})]})}),l?.campAverages&&x.length>0&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsx("h3",{children:"Taux de Victoire Moyen par Camp"}),e.jsx(I,{title:"Taux de Victoire Moyen par Camp",children:e.jsx("div",{style:{height:400},children:e.jsx(L,{width:"100%",height:"100%",children:e.jsxs(q,{data:x,margin:{top:20,right:30,left:20,bottom:80},children:[e.jsx(O,{strokeDasharray:"3 3"}),e.jsx($,{dataKey:"camp",angle:-45,textAnchor:"end",height:90,interval:0,fontSize:11}),e.jsx(K,{label:{value:"Taux de victoire (%)",angle:-90,position:"insideLeft"},domain:[0,100]}),e.jsx(G,{content:({active:a,payload:r})=>{if(a&&r&&r.length>0){const o=r[0].payload;return e.jsxs("div",{style:{background:"var(--bg-secondary)",color:"var(--text-primary)",padding:12,borderRadius:8,border:"1px solid var(--border-color)"},children:[e.jsx("div",{children:e.jsx("strong",{children:o.camp})}),e.jsxs("div",{children:["Parties totales: ",o.totalGames]}),e.jsxs("div",{children:["Taux de victoire: ",o.winRate,"%"]})]})}return null}}),e.jsx(M,{dataKey:"winRateNum",children:x.map((a,r)=>e.jsx(B,{fill:S[a.camp]||`var(--chart-color-${r%6+1})`},`cell-${r}`))})]})})})})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsx("h3",{children:"Distribution des Parties par Camp (hors villageois et loups)"}),e.jsx(I,{title:"Distribution des Parties par Camp (hors villageois et loups)",children:e.jsx("div",{style:{height:400},children:e.jsx(L,{width:"100%",height:"100%",children:e.jsxs(q,{data:T,margin:{top:20,right:30,left:20,bottom:80},children:[e.jsx(O,{strokeDasharray:"3 3"}),e.jsx($,{dataKey:"camp",angle:-45,textAnchor:"end",height:90,interval:0,fontSize:11}),e.jsx(K,{label:{value:"Nombre de parties",angle:-90,position:"insideLeft"}}),e.jsx(G,{content:({active:a,payload:r})=>{if(a&&r&&r.length>0){const o=r[0].payload,d=T.reduce((m,c)=>m+c.totalGames,0),i=(o.totalGames/d*100).toFixed(1);return e.jsxs("div",{style:{background:"var(--bg-secondary)",color:"var(--text-primary)",padding:12,borderRadius:8,border:"1px solid var(--border-color)"},children:[e.jsx("div",{children:e.jsx("strong",{children:o.camp})}),e.jsxs("div",{children:["Parties: ",o.totalGames," (",i,"%)"]}),e.jsxs("div",{children:["Taux victoire: ",o.winRate,"%"]})]})}return null}}),e.jsx(M,{dataKey:"totalGames",children:T.map((a,r)=>e.jsx(B,{fill:S[a.camp]||`var(--chart-color-${r%6+1})`},`cell-${r}`))})]})})})})]}),D.length>0&&e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsx("h3",{children:"Types de Victoire par Camp"}),e.jsxs("p",{className:"lycans-stats-info",children:["Répartition des différents modes de victoire par camp victorieux sur ",l?.totalGames," parties"]}),e.jsx(I,{title:"Types de Victoire par Camp",children:e.jsx("div",{style:{height:500},children:e.jsx(L,{width:"100%",height:"100%",children:e.jsxs(q,{data:D,margin:{top:20,right:30,left:20,bottom:120},children:[e.jsx(O,{strokeDasharray:"3 3"}),e.jsx($,{dataKey:"type",angle:-45,textAnchor:"end",height:120,interval:0,fontSize:10}),e.jsx(K,{label:{value:"Nombre de parties",angle:-90,position:"insideLeft"}}),e.jsx(G,{content:({active:a,payload:r,label:o})=>{if(a&&r&&r.length>0){const d=r.reduce((i,m)=>i+(m.value||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",color:"var(--text-primary)",padding:12,borderRadius:8,border:"1px solid var(--border-color)",maxWidth:300},children:[e.jsx("div",{style:{fontWeight:"bold",marginBottom:8},children:o}),e.jsxs("div",{style:{marginBottom:4},children:["Total: ",d," parties"]}),r.filter(i=>i.value&&i.value>0).sort((i,m)=>(m.value||0)-(i.value||0)).map((i,m)=>{const c=d>0?((i.value||0)/d*100).toFixed(1):"0.0";return e.jsxs("div",{style:{marginBottom:2},children:[e.jsx("span",{style:{display:"inline-block",width:12,height:12,backgroundColor:i.color,marginRight:8,borderRadius:2}}),i.dataKey,": ",i.value," (",c,"%)"]},m)})]})}return null}}),e.jsx(Y,{}),l?.winningCamps?.map((a,r)=>e.jsx(M,{dataKey:a,stackId:"victory",fill:S[a]||`var(--chart-color-${r%6+1})`,name:a},a))]})})})})]})]})]})]}):e.jsx("div",{className:"donnees-manquantes",children:"Aucune donnée de camp disponible"})}export{pe as CampsChart};
