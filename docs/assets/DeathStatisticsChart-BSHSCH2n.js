import{u as ue,r as W,c as pe,a as ye,j as e}from"./index-BhKeqWlH.js";import{u as ce}from"./baseStatsHook-CRrUK6q9.js";import{g as M}from"./gameUtils-C0qLdSzT.js";import{F as U,B as G,C as w,X as q,Y as $,a as J}from"./FullscreenChart-pZqzTMBt.js";import{a as ve,m as le}from"./api-Dfupf3yR.js";import{R as Z,T as X}from"./CategoricalChart-C6lVQ6m4.js";const r={SURVIVOR:"SURVIVOR",VOTE:"VOTE",WEREWOLF_KILL:"WEREWOLF_KILL",HUNTER_SHOT:"HUNTER_SHOT",BOUNTY_HUNTER:"BOUNTY_HUNTER",LOVER_DEATH:"LOVER_DEATH",LOVER_WEREWOLF:"LOVER_WEREWOLF",BEAST_KILL:"BEAST_KILL",ASSASSIN_POTION:"ASSASSIN_POTION",HAUNTED_POTION:"HAUNTED_POTION",ZOMBIE_KILL:"ZOMBIE_KILL",RESURRECTED_WEREWOLF:"RESURRECTED_WEREWOLF",AVENGER_KILL:"AVENGER_KILL",AGENT_KILL:"AGENT_KILL",SHERIFF_KILL:"SHERIFF_KILL",EXPLOSION:"EXPLOSION",CRUSHED:"CRUSHED",STARVATION:"STARVATION",FALL_DEATH:"FALL_DEATH",BESTIAL_DEATH:"BESTIAL_DEATH",AVATAR_DEATH:"AVATAR_DEATH",DISCONNECT:"DISCONNECT",UNKNOWN:"UNKNOWN"};function xe(v){const c=new Set;v.filter(D=>!D.LegacyData||D.LegacyData.deathInformationFilled===!0).forEach(D=>{D.PlayerStats.forEach(C=>{if(D.PlayerStats.some(k=>k.KillerName===C.Username)){const k=M(C.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0});c.add(k)}})});const u=Array.from(c),A=["Villageois","Loup","Amoureux"];return[...A.filter(D=>u.includes(D)),...u.filter(D=>!A.includes(D)).sort()]}function fe(v){if(!v)return null;const c=v.match(/^([NJM])(\d+)$/);if(!c)return null;const[,S,u]=c,A=parseInt(u,10);let p;switch(S){case"N":p="Nuit";break;case"J":p="Jour";break;case"M":p="Meeting";break;default:return null}return{phase:p,day:A,originalString:v}}function ie(v){if(!v||v==="N/A")return r.SURVIVOR;const c=v.trim().toLowerCase();if(c.includes("vote"))return r.VOTE;if(c.includes("tué par loup")||c.includes("tué par un loup")||c.includes("tué par loup ressuscité"))return c.includes("ressuscité")?r.RESURRECTED_WEREWOLF:r.WEREWOLF_KILL;if(c.includes("amoureux")||c.includes("son amoureux"))return c.includes("tué par loup amoureux")?r.LOVER_WEREWOLF:r.LOVER_DEATH;if(c.includes("chasseur")||c.includes("balle"))return c.includes("primes")?r.BOUNTY_HUNTER:r.HUNTER_SHOT;if(c.includes("potion")){if(c.includes("assassin"))return r.ASSASSIN_POTION;if(c.includes("hanté"))return r.HAUNTED_POTION}return c.includes("la bête")?r.BEAST_KILL:c.includes("zombie")?r.ZOMBIE_KILL:c.includes("vengeur")?r.AVENGER_KILL:c.includes("l'agent")?r.AGENT_KILL:c.includes("shérif")?r.SHERIFF_KILL:c.includes("explosé")?r.EXPLOSION:c.includes("écrasé")?r.CRUSHED:c.includes("faim")?r.STARVATION:c.includes("chute")?r.FALL_DEATH:c.includes("bestiale")?r.BESTIAL_DEATH:c.includes("avatar")?r.AVATAR_DEATH:c==="déco"?r.DISCONNECT:r.UNKNOWN}function ne(v){switch(v){case r.SURVIVOR:return"Survivant";case r.VOTE:return"Mort aux votes";case r.WEREWOLF_KILL:return"Tué par un loup";case r.HUNTER_SHOT:return"Abattu par un chasseur";case r.BOUNTY_HUNTER:return"Tué par un chasseur de primes";case r.LOVER_DEATH:return"Mort par amoureux";case r.LOVER_WEREWOLF:return"Tué par son amoureux loup";case r.BEAST_KILL:return"Dévoré par la Bête";case r.ASSASSIN_POTION:return"Tué par une potion (Assassin)";case r.HAUNTED_POTION:return"Tué par une potion (Hanté)";case r.ZOMBIE_KILL:return"Tué par un zombie";case r.RESURRECTED_WEREWOLF:return"Tué par un loup ressuscité";case r.AVENGER_KILL:return"Tué par un vengeur";case r.AGENT_KILL:return"Éliminé par l'Agent";case r.SHERIFF_KILL:return"Abattu par le Shérif";case r.EXPLOSION:return"Mort dans une explosion";case r.CRUSHED:return"Écrasé";case r.STARVATION:return"Mort de faim";case r.FALL_DEATH:return"Mort de chute";case r.BESTIAL_DEATH:return"Mort bestiale";case r.AVATAR_DEATH:return"Mort liée à l'Avatar";case r.DISCONNECT:return"Déconnexion";case r.UNKNOWN:default:return"Mort inconnue"}}function oe(v){switch(v){case r.SURVIVOR:return"Survivant";case r.VOTE:return"Mort aux votes";case r.WEREWOLF_KILL:return"Kill en Loup";case r.HUNTER_SHOT:return"Tir de Chasseur";case r.BOUNTY_HUNTER:return"Kill en Chasseur de primes";case r.LOVER_DEATH:return"Kill de son amoureux";case r.LOVER_WEREWOLF:return"Kill en Loup amoureux";case r.BEAST_KILL:return"Kill en Bête";case r.ASSASSIN_POTION:return"Kill avec Potion (Assassin)";case r.HAUNTED_POTION:return"Kill avec Potion (Hanté)";case r.ZOMBIE_KILL:return"Kill en Zombie";case r.RESURRECTED_WEREWOLF:return"Kill en Loup ressuscité";case r.AVENGER_KILL:return"Kill en Vengeur";case r.AGENT_KILL:return"Kill en Agent";case r.SHERIFF_KILL:return"Kill en Shérif";case r.EXPLOSION:return"Explosion";case r.CRUSHED:return"Écrasement";case r.STARVATION:return"Famine";case r.FALL_DEATH:return"Chute mortelle";case r.BESTIAL_DEATH:return"Tuerie bestiale";case r.AVATAR_DEATH:return"Mort d'Avatar";case r.DISCONNECT:return"Déconnexion";case r.UNKNOWN:default:return"Kill inconnu"}}function Te(v){const c=new Set;v.forEach(A=>{A.PlayerStats.forEach(p=>{if(p.DeathType){const D=ie(p.DeathType);c.add(D)}})});const S=Array.from(c),u=[r.WEREWOLF_KILL,r.VOTE,r.HUNTER_SHOT,r.ZOMBIE_KILL,r.ASSASSIN_POTION,r.HAUNTED_POTION,r.AVENGER_KILL,r.LOVER_DEATH,r.SURVIVOR];return[...u.filter(A=>S.includes(A)),...S.filter(A=>!u.includes(A)).sort()]}function Se(v,c){return v.PlayerStats.filter(S=>S.DeathTiming||S.DeathType).map(S=>{let u=null;if(S.KillerName){const p=v.PlayerStats.find(D=>D.Username===S.KillerName);p&&(u=M(p.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0}))}const A=ie(S.DeathType);return{playerName:S.Username,deathTiming:fe(S.DeathTiming),deathType:A,killerName:S.KillerName,killerCamp:u}}).filter(S=>!c||c==="Tous les camps"?!0:S.killerCamp===c)}function Ee(v,c){if(v.length===0)return null;const S=v.filter(a=>!a.LegacyData||a.LegacyData.deathInformationFilled===!0);if(S.length===0)return null;const u=[],A={};S.forEach(a=>{Se(a,c).forEach(T=>{u.push({...T,gameId:a.Id})}),a.PlayerStats.forEach(T=>{const K=T.Username;(!c||c==="Tous les camps"||M(T.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===c)&&(A[K]=(A[K]||0)+1)})});const p=u.length,D=S.length,C=D>0?p/D:0,j={},k={Nuit:0,Jour:0,Meeting:0};u.forEach(a=>{if(a.deathTiming){const l=`${a.deathTiming.phase}-${a.deathTiming.day}`;j[l]=(j[l]||0)+1,k[a.deathTiming.phase]++}});const V=Object.entries(j).map(([a,l])=>{const[T,K]=a.split("-");return{phase:T,day:parseInt(K,10),count:l,percentage:p>0?l/p*100:0}}).sort((a,l)=>{if(a.phase!==l.phase){const T={Nuit:0,Jour:1,Meeting:2};return T[a.phase]-T[l.phase]}return a.day-l.day}),B={};u.forEach(a=>{B[a.deathType]=(B[a.deathType]||0)+1});const o=Object.entries(B).map(([a,l])=>({type:a,count:l,percentage:p>0?l/p*100:0})).sort((a,l)=>l.count-a.count),I={};u.forEach(a=>{if(a.killerName){I[a.killerName]||(I[a.killerName]={kills:0,victims:new Set,killsByDeathType:{}}),I[a.killerName].kills++,I[a.killerName].victims.add(a.playerName);const l=a.deathType;I[a.killerName].killsByDeathType[l]=(I[a.killerName].killsByDeathType[l]||0)+1}});const f=Object.entries(I).map(([a,l])=>{const T=A[a]||0,K=T>0?l.kills/T:0;return{killerName:a,kills:l.kills,victims:Array.from(l.victims),percentage:p>0?l.kills/p*100:0,gamesPlayed:T,averageKillsPerGame:K,killsByDeathType:l.killsByDeathType}}).sort((a,l)=>l.kills-a.kills),L={};u.forEach(a=>{L[a.playerName]||(L[a.playerName]={totalDeaths:0,deathsByPhase:{Nuit:0,Jour:0,Meeting:0},deathsByType:{},killedBy:{},deathDays:[]});const l=L[a.playerName];l.totalDeaths++,a.deathTiming&&(l.deathsByPhase[a.deathTiming.phase]++,l.deathDays.push(a.deathTiming.day)),l.deathsByType[a.deathType]=(l.deathsByType[a.deathType]||0)+1,a.killerName&&(l.killedBy[a.killerName]=(l.killedBy[a.killerName]||0)+1)});const Y=Object.entries(L).map(([a,l])=>({playerName:a,totalDeaths:l.totalDeaths,deathsByPhase:l.deathsByPhase,deathsByType:l.deathsByType,killedBy:l.killedBy,averageDeathDay:l.deathDays.length>0?l.deathDays.reduce((T,K)=>T+K,0)/l.deathDays.length:null,deathRate:A[a]>0?l.totalDeaths/A[a]:0})).sort((a,l)=>l.totalDeaths-a.totalDeaths),z=Object.entries(k).reduce((a,[l,T])=>T>a.count?{phase:l,count:T}:a,{phase:"Nuit",count:0}).phase,F={};u.forEach(a=>{a.deathTiming&&(F[a.deathTiming.day]=(F[a.deathTiming.day]||0)+1)});const Q=Object.entries(F).reduce((a,[l,T])=>T>a.count?{day:parseInt(l,10),count:T}:a,{day:1,count:0}).day,ee=o.length>0?o[0].type:null,te=f.length>0?f[0].killerName:null;return{totalDeaths:p,totalGames:D,averageDeathsPerGame:C,deathsByTiming:V,deathsByPhase:k,deathsByType:o,killerStats:f,playerDeathStats:Y,mostDeadlyPhase:z,mostDeadlyDay:Q,mostCommonDeathType:ee,mostDeadlyKiller:te}}function Ae(v){return ce(c=>Ee(c,v))}function De(){return ce(v=>xe(v))}function be(){const{navigateToGameDetails:v,navigationState:c,updateNavigationState:S}=ue(),[u,A]=W.useState(c.deathStatsSelectedCamp||"Tous les camps"),[p,D]=W.useState(5),{data:C}=De(),{data:j,isLoading:k,error:V}=Ae(u),{data:B}=pe(),{settings:o}=ye(),I=ve(),f=W.useMemo(()=>B?Te(B.GameStats):[],[B]),L=W.useMemo(()=>{const t={};f.forEach(i=>{i==="WEREWOLF_KILL"?t[i]=I.Loup:i==="VOTE"?t[i]="var(--chart-color-1)":i==="HUNTER_SHOT"?t[i]=I.Chasseur:i==="ZOMBIE_KILL"?t[i]=I.Vaudou:i==="ASSASSIN_POTION"||i==="HAUNTED_POTION"?t[i]=I.Alchimiste:i==="AVENGER_KILL"||i==="LOVER_DEATH"||i==="LOVER_WEREWOLF"?t[i]="var(--chart-color-2)":i==="DISCONNECT"?t[i]="var(--chart-color-3)":i==="SURVIVOR"&&(t[i]="var(--chart-color-4)")});const m=["var(--accent-primary)","var(--accent-secondary)","var(--accent-tertiary)","#8884d8","#82ca9d","#ffc658","#ff7300","#00c49f","#ffbb28"];let h=0;return f.forEach(i=>{t[i]||(t[i]=m[h%m.length],h++)}),t},[f,I]),Y=t=>{A(t),S({deathStatsSelectedCamp:t})},{totalKillsData:z,averageKillsData:F,highlightedPlayerAddedToTotal:Q,highlightedPlayerAddedToAverage:ee,gamesWithKillers:te,totalEligibleForAverage:a}=W.useMemo(()=>{if(!j)return{totalKillsData:[],averageKillsData:[],highlightedPlayerAddedToTotal:!1,highlightedPlayerAddedToAverage:!1,gamesWithKillers:0,totalEligibleForAverage:0};const t=j.killerStats.sort((n,y)=>y.kills-n.kills).slice(0,15),m=o.highlightedPlayer&&t.some(n=>n.killerName===o.highlightedPlayer),h=t.map(n=>{const y={name:n.killerName,value:n.kills,victims:n.victims.length,percentage:n.percentage,gamesPlayed:n.gamesPlayed,averageKillsPerGame:n.averageKillsPerGame,isHighlightedAddition:!1};return f.forEach(N=>{y[N]=n.killsByDeathType[N]||0}),y});let i=!1;if(o.highlightedPlayer&&!m){const n=j.killerStats.find(y=>y.killerName===o.highlightedPlayer);if(n){const y={name:n.killerName,value:n.kills,victims:n.victims.length,percentage:n.percentage,gamesPlayed:n.gamesPlayed,averageKillsPerGame:n.averageKillsPerGame,isHighlightedAddition:!0};f.forEach(N=>{y[N]=n.killsByDeathType[N]||0}),h.push(y),i=!0}}const E=j.killerStats.filter(n=>n.gamesPlayed>=p),O=E.sort((n,y)=>y.averageKillsPerGame-n.averageKillsPerGame).slice(0,15),b=o.highlightedPlayer&&O.some(n=>n.killerName===o.highlightedPlayer),g=O.map(n=>{const y={name:n.killerName,value:n.averageKillsPerGame,victims:n.victims.length,percentage:n.percentage,gamesPlayed:n.gamesPlayed,averageKillsPerGame:n.averageKillsPerGame,isHighlightedAddition:!1};return f.forEach(N=>{const H=n.killsByDeathType[N]||0;y[N]=n.gamesPlayed>0?H/n.gamesPlayed:0}),y});let P=!1;if(o.highlightedPlayer&&!b){const n=j.killerStats.find(y=>y.killerName===o.highlightedPlayer);if(n){const y={name:n.killerName,value:n.averageKillsPerGame,victims:n.victims.length,percentage:n.percentage,gamesPlayed:n.gamesPlayed,averageKillsPerGame:n.averageKillsPerGame,isHighlightedAddition:!0};f.forEach(N=>{const H=n.killsByDeathType[N]||0;y[N]=n.gamesPlayed>0?H/n.gamesPlayed:0}),g.push(y),P=!0}}return{totalKillsData:h,averageKillsData:g,highlightedPlayerAddedToTotal:i,highlightedPlayerAddedToAverage:P,gamesWithKillers:j.totalGames,totalEligibleForAverage:E.length}},[j,o.highlightedPlayer,p,f]),{totalDeathsData:l,survivalRateData:T,highlightedPlayerAddedToDeaths:K,highlightedPlayerAddedToSurvival:se}=W.useMemo(()=>{if(!j||!B)return{totalDeathsData:[],survivalRateData:[],highlightedPlayerAddedToDeaths:!1,highlightedPlayerAddedToSurvival:!1};const t={},m=B.GameStats.filter(s=>!s.LegacyData||s.LegacyData.deathInformationFilled===!0);m.forEach(s=>{s.PlayerStats.forEach(d=>{const x=d.Username;(!u||u==="Tous les camps"||M(d.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===u)&&(t[x]=(t[x]||0)+1)})});const h=j.playerDeathStats.sort((s,d)=>d.totalDeaths-s.totalDeaths).slice(0,15),i=o.highlightedPlayer&&h.some(s=>s.playerName===o.highlightedPlayer),E=h.map(s=>{const d=t[s.playerName]||0,x=d>0?(d-s.totalDeaths)/d*100:0,R={name:s.playerName,value:s.totalDeaths,totalDeaths:s.totalDeaths,gamesPlayed:d,deathRate:s.deathRate,survivalRate:x,isHighlightedAddition:!1};return f.forEach(_=>{R[_]=s.deathsByType[_]||0}),R});let O=!1;if(o.highlightedPlayer&&!i){const s=j.playerDeathStats.find(d=>d.playerName===o.highlightedPlayer);if(s){const d=t[s.playerName]||0,x=d>0?(d-s.totalDeaths)/d*100:0,R={name:s.playerName,value:s.totalDeaths,totalDeaths:s.totalDeaths,gamesPlayed:d,deathRate:s.deathRate,survivalRate:x,isHighlightedAddition:!0};f.forEach(_=>{R[_]=s.deathsByType[_]||0}),E.push(R),O=!0}}const b={},g={};m.forEach(s=>{s.PlayerStats.forEach(d=>{const x=d.Username;if((!u||u==="Tous les camps"||M(d.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===u)&&d.DeathType&&d.DeathType!=="N/A"){g[x]||(g[x]={totalDeaths:0,deathsByType:{}}),g[x].totalDeaths++;const _=ie(d.DeathType);g[x].deathsByType[_]=(g[x].deathsByType[_]||0)+1}})}),Object.entries(t).forEach(([s,d])=>{if(d>=p){const x=g[s],R=x?x.totalDeaths:0,_=x?x.deathsByType:{},re=d>0?(d-R)/d*100:0,ae=d>0?R/d:0;b[s]={playerName:s,totalDeaths:R,deathsByType:_,gamesPlayed:d,survivalRate:re,deathRate:ae}}});const n=Object.values(b).sort((s,d)=>d.survivalRate-s.survivalRate).slice(0,15),y=o.highlightedPlayer&&n.some(s=>s.playerName===o.highlightedPlayer),N=n.map(s=>{const d={name:s.playerName,value:s.survivalRate,totalDeaths:s.totalDeaths,gamesPlayed:s.gamesPlayed,deathRate:s.deathRate,survivalRate:s.survivalRate,isHighlightedAddition:!1};return f.forEach(x=>{const R=s.deathsByType[x]||0;d[x]=s.gamesPlayed>0?R/s.gamesPlayed*100:0}),d});let H=!1;if(o.highlightedPlayer&&!y){let s=b[o.highlightedPlayer];if(!s){const d=t[o.highlightedPlayer]||0,x=g[o.highlightedPlayer],R=x?x.totalDeaths:0,_=x?x.deathsByType:{},re=d>0?(d-R)/d*100:0,ae=d>0?R/d:0;s={playerName:o.highlightedPlayer,totalDeaths:R,deathsByType:_,gamesPlayed:d,survivalRate:re,deathRate:ae}}if(s){const d={name:s.playerName,value:s.survivalRate,totalDeaths:s.totalDeaths,gamesPlayed:s.gamesPlayed,deathRate:s.deathRate,survivalRate:s.survivalRate,isHighlightedAddition:!0};f.forEach(x=>{const R=s.deathsByType[x]||0;d[x]=s.gamesPlayed>0?R/s.gamesPlayed*100:0}),N.push(d),H=!0}}return{totalDeathsData:E,survivalRateData:N,highlightedPlayerAddedToDeaths:O,highlightedPlayerAddedToSurvival:H}},[j,B,o.highlightedPlayer,p,f,u]);if(k)return e.jsx("div",{className:"donnees-attente",children:"Chargement des statistiques de mort..."});if(V)return e.jsxs("div",{className:"donnees-probleme",children:["Erreur: ",V]});if(!j)return e.jsx("div",{className:"donnees-manquantes",children:"Aucune donnée de mort disponible"});const he=({active:t,payload:m,label:h})=>{if(t&&m&&m.length){const i=m[0].payload,E=i.isHighlightedAddition,O=o.highlightedPlayer===i.name,b=f.reduce((g,P)=>g+(i[P]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[h,E&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Victimes totales:"})," ",b]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",i.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill:"}),f.map(g=>{const P=i[g]||0;return P===0?null:e.jsxs("p",{style:{color:L[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:L[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[oe(g),":"]})," ",P]},g)})]}),E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),O&&!E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},de=({active:t,payload:m,label:h})=>{if(t&&m&&m.length){const i=m[0].payload,E=i.isHighlightedAddition,O=o.highlightedPlayer===i.name,b=i.gamesPlayed>=p,g=j?.killerStats.find(y=>y.killerName===i.name),P=f.reduce((y,N)=>y+(i[N]||0),0),n=g?g.kills:Math.round(P*i.gamesPlayed);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[h,E&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Moyenne par partie:"})," ",P.toFixed(2)," (",n," kills /",i.gamesPlayed," games)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",i.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill (moyenne):"}),f.map(y=>{const N=i[y]||0;if(N===0)return null;const H=g?g.killsByDeathType[y]||0:Math.round(N*i.gamesPlayed);return e.jsxs("p",{style:{color:L[y],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:L[y],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[oe(y),":"]})," ",N.toFixed(2)," (",H," kills /",i.gamesPlayed," games)"]},y)})]}),E&&!b&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",p," parties)"]}),E&&b&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),O&&!E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},me=({active:t,payload:m,label:h})=>{if(t&&m&&m.length){const i=m[0].payload,E=i.isHighlightedAddition,O=o.highlightedPlayer===i.name,b=f.reduce((g,P)=>g+(i[P]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[h,E&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",b]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",i.gamesPlayed]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",i.survivalRate.toFixed(1),"%"]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort:"}),f.map(g=>{const P=i[g]||0;return P===0?null:e.jsxs("p",{style:{color:L[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:L[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ne(g),":"]})," ",P]},g)})]}),E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),O&&!E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},ge=({active:t,payload:m,label:h})=>{if(t&&m&&m.length){const i=m[0].payload,E=i.isHighlightedAddition,O=o.highlightedPlayer===i.name,b=i.gamesPlayed>=p;return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[h,E&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",i.survivalRate.toFixed(1),"% (",i.gamesPlayed-i.totalDeaths," survies / ",i.gamesPlayed," parties)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",i.totalDeaths]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",i.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort (taux %):"}),f.map(g=>{const P=i[g]||0;return P===0?null:e.jsxs("p",{style:{color:L[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:L[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ne(g),":"]})," ",P.toFixed(1),"%"]},g)})]}),E&&!b&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",p," parties)"]}),E&&b&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),O&&!E&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null};return e.jsxs("div",{className:"lycans-players-stats",children:[e.jsx("h2",{children:"Statistiques de Tueurs"}),e.jsxs("div",{style:{marginBottom:"1.5rem",display:"flex",alignItems:"center",gap:"0.5rem"},children:[e.jsx("label",{htmlFor:"camp-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem",fontWeight:"bold"},children:"Camp du tueur :"}),e.jsxs("select",{id:"camp-select",value:u,onChange:t=>Y(t.target.value),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.5rem",fontSize:"0.9rem",minWidth:"150px"},children:[e.jsx("option",{value:"Tous les camps",children:"Tous les camps"}),C?.map(t=>e.jsx("option",{value:t,children:t},t))]})]}),e.jsxs("div",{className:"lycans-resume-conteneur",style:{marginBottom:"2rem"},children:[e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Total des morts"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-secondary)"},children:j.totalDeaths})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Tueurs identifiés"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--chart-color-1)"},children:j.killerStats.length})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Nombre de parties enregistrées"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-primary)"},children:te})]})]}),e.jsxs("div",{className:"lycans-graphiques-groupe",children:[e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Tueurs (Total)"}),Q&&o.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',o.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(U,{title:"Top Tueurs (Total)",children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:z,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:h})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:o.highlightedPlayer===h.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:o.highlightedPlayer===h.value?14:13,fontWeight:o.highlightedPlayer===h.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:h.value})}),e.jsx($,{label:{value:"Nombre total de victimes",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(he,{})}),f.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"kills",fill:L[t],onClick:m=>{const h={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};u!=="Tous les camps"&&(h.campFilter={selectedCamp:u,campFilterMode:"all-assignments"}),v(h)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,z.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus actifs (total)"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Tueurs (Moyenne par Partie)"}),ee&&o.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',o.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-average-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-average-select",value:p,onChange:t=>D(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:le.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(U,{title:"Top Tueurs (Moyenne par Partie)",children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:F,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:h})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:o.highlightedPlayer===h.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:o.highlightedPlayer===h.value?14:13,fontWeight:o.highlightedPlayer===h.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:h.value})}),e.jsx($,{label:{value:"Moyenne de victimes par partie",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(de,{})}),f.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"averageKills",fill:L[t],onClick:m=>{const h={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};u!=="Tous les camps"&&(h.campFilter={selectedCamp:u,campFilterMode:"all-assignments"}),v(h)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,F.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus efficaces (sur ",a," ayant au moins ",p," partie",p>1?"s":"",")"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Victimes"}),K&&o.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',o.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(U,{title:"Top Victimes",children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:l,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:h})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:o.highlightedPlayer===h.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:o.highlightedPlayer===h.value?14:13,fontWeight:o.highlightedPlayer===h.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:h.value})}),e.jsx($,{label:{value:"Nombre total de morts",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(me,{})}),f.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"deaths",fill:L[t],onClick:m=>{const h={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};u!=="Tous les camps"&&(h.campFilter={selectedCamp:u,campFilterMode:"all-assignments"}),v(h)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,l.filter(t=>!t.isHighlightedAddition).length)," des joueurs les plus souvent morts"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Meilleur Taux de Survie"}),se&&o.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',o.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-survival-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-survival-select",value:p,onChange:t=>D(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:le.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(U,{title:"Meilleur Taux de Survie",children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:T,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:h})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:o.highlightedPlayer===h.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:o.highlightedPlayer===h.value?14:13,fontWeight:o.highlightedPlayer===h.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:h.value})}),e.jsx($,{label:{value:"Taux de survie (%)",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(ge,{})}),f.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"survivalRate",fill:L[t],onClick:m=>{const h={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};u!=="Tous les camps"&&(h.campFilter={selectedCamp:u,campFilterMode:"all-assignments"}),v(h)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,T.filter(t=>!t.isHighlightedAddition).length)," des joueurs avec le plus haut taux de survie (ayant au moins ",p," partie",p>1?"s":"",")"]})]})]}),e.jsx("div",{className:"lycans-section-description",style:{marginTop:"1.5rem"},children:e.jsxs("p",{children:[e.jsx("strong",{children:"Note : "}),"Données en cours de récupération (données partielles)."]})})]})}export{be as DeathStatisticsChart};
