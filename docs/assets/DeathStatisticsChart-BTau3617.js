import{u as pe,r as H,c as ye,a as ve,j as e}from"./index-ik0w3zCM.js";import{u as se}from"./baseStatsHook-Dm9U5sRU.js";import{a as V,D as s,g as z}from"./datasyncExport-DNugpht-.js";import{F as W,B as G,C as U,X as q,Y as w,a as $}from"./FullscreenChart-ngywYAvU.js";import{a as xe,m as ae}from"./api-DBFAV0XL.js";import{R as Z,T as J}from"./CategoricalChart-DOhEKz7k.js";function fe(S){const p=new Set;S.filter(A=>!A.LegacyData||A.LegacyData.deathInformationFilled===!0).forEach(A=>{A.PlayerStats.forEach(F=>{const P=z(F.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1});p.add(P)})});const a=Array.from(p),f=["Villageois","Loup","Amoureux"];return[...f.filter(A=>a.includes(A)),...a.filter(A=>!f.includes(A)).sort()]}function re(S){switch(S){case s.SURVIVOR:return"Survivant";case s.VOTE:return"Mort aux votes";case s.WEREWOLF_KILL:return"Tué par un loup";case s.HUNTER_SHOT:return"Abattu par un chasseur";case s.BOUNTY_HUNTER:return"Tué par un chasseur de primes";case s.LOVER_DEATH:return"Mort par amoureux";case s.LOVER_WEREWOLF:return"Tué par un loup amoureux";case s.BEAST_KILL:return"Dévoré par la Bête";case s.ASSASSIN_POTION:return"Tué par une potion (Assassin)";case s.HAUNTED_POTION:return"Tué par une potion (Hanté)";case s.ZOMBIE_KILL:return"Tué par un zombie";case s.RESURRECTED_WEREWOLF:return"Tué par un loup ressuscité";case s.AVENGER_KILL:return"Tué par un vengeur";case s.AGENT_KILL:return"Éliminé par l'Agent";case s.SHERIFF_KILL:return"Abattu par le Shérif";case s.EXPLOSION:return"Mort dans une explosion";case s.CRUSHED:return"Écrasé";case s.STARVATION:return"Mort de faim";case s.FALL_DEATH:return"Mort de chute";case s.BESTIAL_DEATH:return"Mort bestiale";case s.AVATAR_DEATH:return"Mort liée à l'Avatar";case s.DISCONNECT:return"Déconnexion";case s.UNKNOWN:default:return"Mort inconnue"}}function ie(S){switch(S){case s.SURVIVOR:return"Survivant";case s.VOTE:return"Mort aux votes";case s.WEREWOLF_KILL:return"Kill en Loup";case s.HUNTER_SHOT:return"Tir de Chasseur";case s.BOUNTY_HUNTER:return"Kill en Chasseur de primes";case s.LOVER_DEATH:return"Kill de son amoureux";case s.LOVER_WEREWOLF:return"Kill en Loup amoureux";case s.BEAST_KILL:return"Kill en Bête";case s.ASSASSIN_POTION:return"Kill avec Potion (Assassin)";case s.HAUNTED_POTION:return"Kill avec Potion (Hanté)";case s.ZOMBIE_KILL:return"Kill en Zombie";case s.RESURRECTED_WEREWOLF:return"Kill en Loup ressuscité";case s.AVENGER_KILL:return"Kill en Vengeur";case s.AGENT_KILL:return"Kill en Agent";case s.SHERIFF_KILL:return"Kill en Shérif";case s.EXPLOSION:return"Explosion";case s.CRUSHED:return"Écrasement";case s.STARVATION:return"Famine";case s.FALL_DEATH:return"Chute mortelle";case s.BESTIAL_DEATH:return"Tuerie bestiale";case s.AVATAR_DEATH:return"Mort d'Avatar";case s.DISCONNECT:return"Déconnexion";case s.UNKNOWN:default:return"Kill inconnu"}}function Se(S){const p=new Set;S.forEach(f=>{f.PlayerStats.forEach(c=>{if(c.DeathType){const A=V(c.DeathType);p.add(A)}})});const x=Array.from(p),a=[s.WEREWOLF_KILL,s.VOTE,s.HUNTER_SHOT,s.ZOMBIE_KILL,s.ASSASSIN_POTION,s.HAUNTED_POTION,s.AVENGER_KILL,s.LOVER_DEATH,s.SURVIVOR];return[...a.filter(f=>x.includes(f)),...x.filter(f=>!a.includes(f)).sort()]}function Te(S,p){return S.PlayerStats.filter(x=>V(x.DeathType)!=="SURVIVOR"&&(x.DeathTiming||x.DeathType)).map(x=>{let a=null;if(x.KillerName){const c=S.PlayerStats.find(A=>A.Username===x.KillerName);c&&(a=z(c.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1}),c.MainRoleFinal&&c.MainRoleFinal!==c.MainRoleInitial&&(c.MainRoleFinal==="Loup"?a="Loup":c.MainRoleFinal==="Zombie"&&(a="Vaudou")))}const f=V(x.DeathType);return{playerName:x.Username,deathType:f,killerName:x.KillerName,killerCamp:a}}).filter(x=>{if(!p||p==="Tous les camps")return!0;const a=S.PlayerStats.find(c=>c.Username===x.playerName);return a?z(a.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1})===p:!1})}function je(S,p){const x=[];return S.PlayerStats.forEach(a=>{if(a.KillerName&&a.DeathType){const f=V(a.DeathType);if(f==="SURVIVOR"||f==="VOTE"||f==="DISCONNECT"||f==="STARVATION"||f==="FALL_DEATH"||f==="AVATAR_DEATH")return;const c=S.PlayerStats.find(F=>F.Username===a.KillerName);if(!c)return;let A=z(c.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1});c.MainRoleFinal&&c.MainRoleFinal!==c.MainRoleInitial&&(c.MainRoleFinal==="Loup"?A="Loup":c.MainRoleFinal==="Zombie"&&(A="Vaudou")),x.push({killerName:a.KillerName,victimName:a.Username,deathType:f,killerCamp:A})}}),p&&p!=="Tous les camps"?x.filter(a=>a.killerCamp===p):x}function De(S,p){if(S.length===0)return null;const x=S.filter(m=>!m.LegacyData||m.LegacyData.deathInformationFilled===!0);if(x.length===0)return null;const a=[],f={};x.forEach(m=>{Te(m,p).forEach(j=>{a.push({...j,gameId:m.Id})}),m.PlayerStats.forEach(j=>{const k=j.Username;(!p||p==="Tous les camps"||z(j.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1})===p)&&(f[k]=(f[k]||0)+1)})});const c=a.length,A=x.length,F=A>0?c/A:0,P={};a.forEach(m=>{P[m.deathType]=(P[m.deathType]||0)+1});const _=Object.entries(P).map(([m,u])=>({type:m,count:u||0,percentage:c>0?(u||0)/c*100:0})).sort((m,u)=>u.count-m.count),B={};x.forEach(m=>{je(m,p).forEach(j=>{B[j.killerName]||(B[j.killerName]={kills:0,victims:new Set,killsByDeathType:{}}),B[j.killerName].kills++,B[j.killerName].victims.add(j.victimName),B[j.killerName].killsByDeathType[j.deathType]=(B[j.killerName].killsByDeathType[j.deathType]||0)+1})});const O=Object.entries(B).map(([m,u])=>{const j=f[m]||0,k=j>0?u.kills/j:0;return{killerName:m,kills:u.kills,victims:Array.from(u.victims),percentage:c>0?u.kills/c*100:0,gamesPlayed:j,averageKillsPerGame:k,killsByDeathType:u.killsByDeathType}}).sort((m,u)=>u.kills-m.kills),n={};a.forEach(m=>{n[m.playerName]||(n[m.playerName]={totalDeaths:0,deathsByType:{},killedBy:{},deathDays:[]});const u=n[m.playerName];u.totalDeaths++,u.deathsByType[m.deathType]=(u.deathsByType[m.deathType]||0)+1,m.killerName&&(u.killedBy[m.killerName]=(u.killedBy[m.killerName]||0)+1)});const M=Object.entries(n).map(([m,u])=>({playerName:m,totalDeaths:u.totalDeaths,deathsByType:u.deathsByType,killedBy:u.killedBy,averageDeathDay:u.deathDays.length>0?u.deathDays.reduce((j,k)=>j+k,0)/u.deathDays.length:null,deathRate:f[m]>0?u.totalDeaths/f[m]:0})).sort((m,u)=>u.totalDeaths-m.totalDeaths),T=_.length>0?_[0].type:null,K=O.length>0?O[0].killerName:null;return{totalDeaths:c,totalGames:A,averageDeathsPerGame:F,deathsByType:_,killerStats:O,playerDeathStats:M,mostCommonDeathType:T,mostDeadlyKiller:K}}function Ae(S){return se(p=>De(p,S))}function Pe(){return se(S=>fe(S))}function Ie(){const{navigateToGameDetails:S,navigationState:p,updateNavigationState:x}=pe(),[a,f]=H.useState(p.deathStatisticsState?.selectedCamp||p.deathStatsSelectedCamp||"Tous les camps"),[c,A]=H.useState(p.deathStatisticsState?.minGamesForAverage||10),{data:F}=Pe(),{data:P,isLoading:_,error:B}=Ae(a),{data:O}=ye(),{settings:n}=ve(),M=xe();H.useEffect(()=>{(!p.deathStatisticsState||p.deathStatisticsState.selectedCamp!==a||p.deathStatisticsState.minGamesForAverage!==c)&&x({deathStatisticsState:{selectedCamp:a,minGamesForAverage:c,focusChart:p.deathStatisticsState?.focusChart}})},[a,c,p.deathStatisticsState,x]);const T=H.useMemo(()=>O?Se(O):[],[O]),K=H.useMemo(()=>{const t={};T.forEach(r=>{r==="WEREWOLF_KILL"?t[r]=M.Loup:r==="VOTE"?t[r]="var(--chart-color-1)":r==="HUNTER_SHOT"?t[r]=M.Chasseur:r==="ZOMBIE_KILL"?t[r]=M.Vaudou:r==="ASSASSIN_POTION"||r==="HAUNTED_POTION"?t[r]=M.Alchimiste:r==="AVENGER_KILL"?t[r]="var(--chart-color-2)":r==="LOVER_DEATH"||r==="LOVER_WEREWOLF"?t[r]=M.Amoureux:r==="DISCONNECT"?t[r]="var(--chart-color-3)":r==="SURVIVOR"&&(t[r]="var(--chart-color-4)")});const d=["var(--accent-primary)","var(--accent-secondary)","var(--accent-tertiary)","#8884d8","#82ca9d","#ffc658","#ff7300","#00c49f","#ffbb28"];let o=0;return T.forEach(r=>{t[r]||(t[r]=d[o%d.length],o++)}),t},[T,M]),m=t=>{f(t),x({deathStatsSelectedCamp:t,deathStatisticsState:{selectedCamp:t,minGamesForAverage:c,focusChart:p.deathStatisticsState?.focusChart}})},u=t=>{A(t),x({deathStatisticsState:{selectedCamp:a,minGamesForAverage:t,focusChart:p.deathStatisticsState?.focusChart}})},{totalKillsData:j,averageKillsData:k,highlightedPlayerAddedToTotal:Q,highlightedPlayerAddedToAverage:le,gamesWithKillers:ne,totalEligibleForAverage:oe}=H.useMemo(()=>{if(!P)return{totalKillsData:[],averageKillsData:[],highlightedPlayerAddedToTotal:!1,highlightedPlayerAddedToAverage:!1,gamesWithKillers:0,totalEligibleForAverage:0};const t=P.killerStats.sort((l,y)=>y.kills-l.kills).slice(0,15),d=n.highlightedPlayer&&t.some(l=>l.killerName===n.highlightedPlayer),o=t.map(l=>{const y={name:l.killerName,value:l.kills,victims:l.victims.length,percentage:l.percentage,gamesPlayed:l.gamesPlayed,averageKillsPerGame:l.averageKillsPerGame,isHighlightedAddition:!1};return T.forEach(R=>{y[R]=l.killsByDeathType[R]||0}),y});let r=!1;if(n.highlightedPlayer&&!d){const l=P.killerStats.find(y=>y.killerName===n.highlightedPlayer);if(l){const y={name:l.killerName,value:l.kills,victims:l.victims.length,percentage:l.percentage,gamesPlayed:l.gamesPlayed,averageKillsPerGame:l.averageKillsPerGame,isHighlightedAddition:!0};T.forEach(R=>{y[R]=l.killsByDeathType[R]||0}),o.push(y),r=!0}}const D=P.killerStats.filter(l=>l.gamesPlayed>=c),N=D.sort((l,y)=>y.averageKillsPerGame-l.averageKillsPerGame).slice(0,15),L=n.highlightedPlayer&&N.some(l=>l.killerName===n.highlightedPlayer),g=N.map(l=>{const y={name:l.killerName,value:l.averageKillsPerGame,victims:l.victims.length,percentage:l.percentage,gamesPlayed:l.gamesPlayed,averageKillsPerGame:l.averageKillsPerGame,isHighlightedAddition:!1};return T.forEach(R=>{const C=l.killsByDeathType[R]||0;y[R]=l.gamesPlayed>0?C/l.gamesPlayed:0}),y});let E=!1;if(n.highlightedPlayer&&!L){const l=P.killerStats.find(y=>y.killerName===n.highlightedPlayer);if(l){const y={name:l.killerName,value:l.averageKillsPerGame,victims:l.victims.length,percentage:l.percentage,gamesPlayed:l.gamesPlayed,averageKillsPerGame:l.averageKillsPerGame,isHighlightedAddition:!0};T.forEach(R=>{const C=l.killsByDeathType[R]||0;y[R]=l.gamesPlayed>0?C/l.gamesPlayed:0}),g.push(y),E=!0}}return{totalKillsData:o,averageKillsData:g,highlightedPlayerAddedToTotal:r,highlightedPlayerAddedToAverage:E,gamesWithKillers:P.totalGames,totalEligibleForAverage:D.length}},[P,n.highlightedPlayer,c,T]),{totalDeathsData:ee,survivalRateData:te,highlightedPlayerAddedToDeaths:ce,highlightedPlayerAddedToSurvival:he}=H.useMemo(()=>{if(!P||!O)return{totalDeathsData:[],survivalRateData:[],highlightedPlayerAddedToDeaths:!1,highlightedPlayerAddedToSurvival:!1};const t={},d=O.filter(i=>!i.LegacyData||i.LegacyData.deathInformationFilled===!0);d.forEach(i=>{i.PlayerStats.forEach(h=>{const v=h.Username;(!a||a==="Tous les camps"||z(h.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1})===a)&&(t[v]=(t[v]||0)+1)})});const o=P.playerDeathStats.sort((i,h)=>h.totalDeaths-i.totalDeaths).slice(0,15),r=n.highlightedPlayer&&o.some(i=>i.playerName===n.highlightedPlayer),D=o.map(i=>{const h=t[i.playerName]||0,v=h>0?(h-i.totalDeaths)/h*100:0,b={name:i.playerName,value:i.totalDeaths,totalDeaths:i.totalDeaths,gamesPlayed:h,deathRate:i.deathRate,survivalRate:v,isHighlightedAddition:!1};return T.forEach(I=>{b[I]=i.deathsByType[I]||0}),b});let N=!1;if(n.highlightedPlayer&&!r){const i=P.playerDeathStats.find(h=>h.playerName===n.highlightedPlayer);if(i){const h=t[i.playerName]||0,v=h>0?(h-i.totalDeaths)/h*100:0,b={name:i.playerName,value:i.totalDeaths,totalDeaths:i.totalDeaths,gamesPlayed:h,deathRate:i.deathRate,survivalRate:v,isHighlightedAddition:!0};T.forEach(I=>{b[I]=i.deathsByType[I]||0}),D.push(b),N=!0}}const L={},g={};d.forEach(i=>{i.PlayerStats.forEach(h=>{const v=h.Username;if((!a||a==="Tous les camps"||z(h.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!1})===a)&&h.DeathType&&h.DeathType!=="N/A"){g[v]||(g[v]={totalDeaths:0,deathsByType:{}}),g[v].totalDeaths++;const I=V(h.DeathType);g[v].deathsByType[I]=(g[v].deathsByType[I]||0)+1}})}),Object.entries(t).forEach(([i,h])=>{if(h>=c){const v=g[i],b=v?v.totalDeaths:0,I=v?v.deathsByType:{},X=h>0?(h-b)/h*100:0,Y=h>0?b/h:0;L[i]={playerName:i,totalDeaths:b,deathsByType:I,gamesPlayed:h,survivalRate:X,deathRate:Y}}});const l=Object.values(L).sort((i,h)=>h.survivalRate-i.survivalRate).slice(0,15),y=n.highlightedPlayer&&l.some(i=>i.playerName===n.highlightedPlayer),R=l.map(i=>{const h={name:i.playerName,value:i.survivalRate,totalDeaths:i.totalDeaths,gamesPlayed:i.gamesPlayed,deathRate:i.deathRate,survivalRate:i.survivalRate,isHighlightedAddition:!1};return T.forEach(v=>{const b=i.deathsByType[v]||0;h[v]=i.gamesPlayed>0?b/i.gamesPlayed*100:0}),h});let C=!1;if(n.highlightedPlayer&&!y){let i=L[n.highlightedPlayer];if(!i){const h=t[n.highlightedPlayer]||0,v=g[n.highlightedPlayer],b=v?v.totalDeaths:0,I=v?v.deathsByType:{},X=h>0?(h-b)/h*100:0,Y=h>0?b/h:0;i={playerName:n.highlightedPlayer,totalDeaths:b,deathsByType:I,gamesPlayed:h,survivalRate:X,deathRate:Y}}if(i){const h={name:i.playerName,value:i.survivalRate,totalDeaths:i.totalDeaths,gamesPlayed:i.gamesPlayed,deathRate:i.deathRate,survivalRate:i.survivalRate,isHighlightedAddition:!0};T.forEach(v=>{const b=i.deathsByType[v]||0;h[v]=i.gamesPlayed>0?b/i.gamesPlayed*100:0}),R.push(h),C=!0}}return{totalDeathsData:D,survivalRateData:R,highlightedPlayerAddedToDeaths:N,highlightedPlayerAddedToSurvival:C}},[P,O,n.highlightedPlayer,c,T,a]);if(_)return e.jsx("div",{className:"donnees-attente",children:"Chargement des statistiques de mort..."});if(B)return e.jsxs("div",{className:"donnees-probleme",children:["Erreur: ",B]});if(!P)return e.jsx("div",{className:"donnees-manquantes",children:"Aucune donnée de mort disponible"});const de=({active:t,payload:d,label:o})=>{if(t&&d&&d.length){const r=d[0].payload,D=r.isHighlightedAddition,N=n.highlightedPlayer===r.name,L=T.reduce((g,E)=>g+(r[E]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:N?"var(--accent-primary)":"var(--text-primary)"},children:[o,D&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Victimes totales:"})," ",L]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",r.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill:"}),T.map(g=>{const E=r[g]||0;return E===0?null:e.jsxs("p",{style:{color:K[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:K[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ie(g),":"]})," ",E]},g)})]}),D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),N&&!D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},me=({active:t,payload:d,label:o})=>{if(t&&d&&d.length){const r=d[0].payload,D=r.isHighlightedAddition,N=n.highlightedPlayer===r.name,L=r.gamesPlayed>=c,g=P?.killerStats.find(y=>y.killerName===r.name),E=T.reduce((y,R)=>y+(r[R]||0),0),l=g?g.kills:Math.round(E*r.gamesPlayed);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:N?"var(--accent-primary)":"var(--text-primary)"},children:[o,D&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Moyenne par partie:"})," ",E.toFixed(2)," (",l," kills /",r.gamesPlayed," games)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",r.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill (moyenne):"}),T.map(y=>{const R=r[y]||0;if(R===0)return null;const C=g?g.killsByDeathType[y]||0:Math.round(R*r.gamesPlayed);return e.jsxs("p",{style:{color:K[y],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:K[y],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ie(y),":"]})," ",R.toFixed(2)," (",C," kills /",r.gamesPlayed," games)"]},y)})]}),D&&!L&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",c," parties)"]}),D&&L&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),N&&!D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},ge=({active:t,payload:d,label:o})=>{if(t&&d&&d.length){const r=d[0].payload,D=r.isHighlightedAddition,N=n.highlightedPlayer===r.name,L=T.reduce((g,E)=>g+(r[E]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:N?"var(--accent-primary)":"var(--text-primary)"},children:[o,D&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",L]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",r.gamesPlayed]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",r.survivalRate.toFixed(1),"%"]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort:"}),T.map(g=>{const E=r[g]||0;return E===0?null:e.jsxs("p",{style:{color:K[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:K[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[re(g),":"]})," ",E]},g)})]}),D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),N&&!D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},ue=({active:t,payload:d,label:o})=>{if(t&&d&&d.length){const r=d[0].payload,D=r.isHighlightedAddition,N=n.highlightedPlayer===r.name,L=r.gamesPlayed>=c;return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:N?"var(--accent-primary)":"var(--text-primary)"},children:[o,D&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",r.survivalRate.toFixed(1),"% (",r.gamesPlayed-r.totalDeaths," survies / ",r.gamesPlayed," parties)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",r.totalDeaths]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",r.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort (taux %):"}),T.map(g=>{const E=r[g]||0;return E===0?null:e.jsxs("p",{style:{color:K[g],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:K[g],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[re(g),":"]})," ",E.toFixed(1),"%"]},g)})]}),D&&!L&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",c," parties)"]}),D&&L&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),N&&!D&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null};return e.jsxs("div",{className:"lycans-players-stats",children:[e.jsx("h2",{children:"Statistiques de Tueurs"}),e.jsxs("div",{style:{marginBottom:"1.5rem",display:"flex",alignItems:"center",gap:"0.5rem"},children:[e.jsx("label",{htmlFor:"camp-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem",fontWeight:"bold"},children:"Camp :"}),e.jsxs("select",{id:"camp-select",value:a,onChange:t=>m(t.target.value),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.5rem",fontSize:"0.9rem",minWidth:"150px"},children:[e.jsx("option",{value:"Tous les camps",children:"Tous les camps"}),F?.map(t=>e.jsx("option",{value:t,children:t},t))]})]}),e.jsxs("div",{className:"lycans-resume-conteneur",style:{marginBottom:"2rem"},children:[e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Total des morts"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-secondary)"},children:P.totalDeaths})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Tueurs identifiés"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--chart-color-1)"},children:P.killerStats.length})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Nombre de parties enregistrées"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-primary)"},children:ne})]})]}),e.jsxs("div",{className:"lycans-graphiques-groupe",children:[e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:a==="Tous les camps"?"Top Tueurs (Total)":`Top Tueurs en ${a} (Total)`}),Q&&n.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',n.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(W,{title:a==="Tous les camps"?"Top Tueurs (Total)":`Top Tueurs en ${a} (Total)`,children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:j,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(U,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:d,payload:o})=>e.jsx("text",{x:t,y:d,dy:16,textAnchor:"end",fill:n.highlightedPlayer===o.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:n.highlightedPlayer===o.value?14:13,fontWeight:n.highlightedPlayer===o.value?"bold":"italic",transform:`rotate(-45 ${t} ${d})`,children:o.value})}),e.jsx(w,{label:{value:"Nombre total de victimes",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(J,{content:e.jsx(de,{})}),T.map(t=>e.jsx($,{dataKey:t,name:t,stackId:"kills",fill:K[t],onClick:d=>{const o={selectedPlayer:d?.name,fromComponent:"Statistiques de Mort"};a!=="Tous les camps"&&(o.campFilter={selectedCamp:a,campFilterMode:"all-assignments"}),S(o)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,j.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus actifs (total)"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:a==="Tous les camps"?"Top Tueurs (Moyenne par Partie)":`Top Tueurs en ${a} (Moyenne par partie)`}),le&&n.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',n.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-average-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-average-select",value:c,onChange:t=>u(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:ae.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(W,{title:a==="Tous les camps"?"Top Tueurs (Moyenne par Partie)":`Top Tueurs en ${a} (Moyenne par partie)`,children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:k,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(U,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:d,payload:o})=>e.jsx("text",{x:t,y:d,dy:16,textAnchor:"end",fill:n.highlightedPlayer===o.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:n.highlightedPlayer===o.value?14:13,fontWeight:n.highlightedPlayer===o.value?"bold":"italic",transform:`rotate(-45 ${t} ${d})`,children:o.value})}),e.jsx(w,{label:{value:"Moyenne de victimes par partie",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(J,{content:e.jsx(me,{})}),T.map(t=>e.jsx($,{dataKey:t,name:t,stackId:"averageKills",fill:K[t],onClick:d=>{const o={selectedPlayer:d?.name,fromComponent:"Statistiques de Mort"};a!=="Tous les camps"&&(o.campFilter={selectedCamp:a,campFilterMode:"all-assignments"}),S(o)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,k.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus efficaces (sur ",oe," ayant au moins ",c," partie",c>1?"s":"",")"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:a==="Tous les camps"?"Morts (Total)":`Morts en ${a} (Total)`}),ce&&n.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',n.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(W,{title:a==="Tous les camps"?"Morts (Total)":`Morts en ${a} (Total)`,children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:ee,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(U,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:d,payload:o})=>e.jsx("text",{x:t,y:d,dy:16,textAnchor:"end",fill:n.highlightedPlayer===o.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:n.highlightedPlayer===o.value?14:13,fontWeight:n.highlightedPlayer===o.value?"bold":"italic",transform:`rotate(-45 ${t} ${d})`,children:o.value})}),e.jsx(w,{label:{value:"Nombre total de morts",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(J,{content:e.jsx(ge,{})}),T.map(t=>e.jsx($,{dataKey:t,name:t,stackId:"deaths",fill:K[t],onClick:d=>{const o={selectedPlayer:d?.name,fromComponent:"Statistiques de Mort"};a!=="Tous les camps"&&(o.campFilter={selectedCamp:a,campFilterMode:"all-assignments"}),S(o)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,ee.filter(t=>!t.isHighlightedAddition).length)," des joueurs les plus souvent morts"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsxs("h3",{children:["Meilleurs Survivants ",a==="Tous les camps"?"(Total)":` en ${a}`]}),he&&n.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',n.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-survival-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-survival-select",value:c,onChange:t=>u(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:ae.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(W,{title:"Meilleurs Survivants",children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:te,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(U,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:d,payload:o})=>e.jsx("text",{x:t,y:d,dy:16,textAnchor:"end",fill:n.highlightedPlayer===o.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:n.highlightedPlayer===o.value?14:13,fontWeight:n.highlightedPlayer===o.value?"bold":"italic",transform:`rotate(-45 ${t} ${d})`,children:o.value})}),e.jsx(w,{label:{value:"Taux de mort (%)",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(J,{content:e.jsx(ue,{})}),T.map(t=>e.jsx($,{dataKey:t,name:t,stackId:"survivalRate",fill:K[t],onClick:d=>{const o={selectedPlayer:d?.name,fromComponent:"Statistiques de Mort"};a!=="Tous les camps"&&(o.campFilter={selectedCamp:a,campFilterMode:"all-assignments"}),S(o)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,te.filter(t=>!t.isHighlightedAddition).length)," des joueurs avec le plus haut taux de survie (ayant au moins ",c," partie",c>1?"s":"",")"]})]})]}),e.jsx("div",{className:"lycans-section-description",style:{marginTop:"1.5rem"},children:e.jsxs("p",{children:[e.jsx("strong",{children:"Note : "}),"Données en cours de récupération (données partielles)."]})})]})}export{Ie as DeathStatisticsChart};
