import{r as v,u as w,a as A,j as s,m as G,l as F}from"./index-CcXgzc_S.js";import{u as L,g as R}from"./api-BG053Rxz.js";function q(o){const[u,T]=v.useState(null),[f,C]=v.useState(!1),[g,x]=v.useState(null);v.useEffect(()=>{let m=!0;return(async()=>{try{C(!0),x(null);const d=await fetch("/data/playerAchievements.json");if(!d.ok)throw new Error(`Failed to load achievements: ${d.status} ${d.statusText}`);const p=await d.json();m&&(T(p),console.log("✅ Pre-calculated achievements loaded:",{totalPlayers:p.totalPlayers,totalGames:p.totalGames,generatedAt:p.generatedAt,playersWithAchievements:Object.keys(p.achievements).length}))}catch(d){m&&(x(d instanceof Error?d.message:"Failed to load achievements"),console.error("Error loading pre-calculated achievements:",d))}finally{m&&C(!1)}})(),()=>{m=!1}},[]);const b=o&&u?.achievements[o]||null;return v.useEffect(()=>{if(o&&u){const m=u.achievements[o];m?console.log(`🏆 Achievements for ${o}:`,{allGames:m.allGamesAchievements.length,moddedOnly:m.moddedOnlyAchievements.length,categories:[...new Set([...m.allGamesAchievements.map(h=>h.category),...m.moddedOnlyAchievements.map(h=>h.category)])]}):console.log(`❌ No achievements found for ${o}`)}},[o,u]),{data:b,isLoading:f,error:g,metadata:{generatedAt:u?.generatedAt||null,totalPlayers:u?.totalPlayers||0,totalGames:u?.totalGames||0,totalModdedGames:u?.totalModdedGames||0}}}function D({achievements:o,title:u,emptyMessage:T,achievementType:f="all"}){const{navigateToTab:C,updateNavigationState:g,clearNavigation:x}=w(),{settings:b,updateSettings:m}=A(),h=L(),d=(e,i)=>{if(i.stopPropagation(),!e.redirectTo)return;x();const l=b.highlightedPlayer;if(m(f==="modded"?{gameFilter:"modded",dateRange:{start:null,end:null},mapNameFilter:"all",playerFilter:{mode:"none",players:[]},highlightedPlayer:l,useIndependentFilters:!0,independentFilters:{gameTypeEnabled:!0,gameFilter:"modded",dateRangeEnabled:!1,dateRange:{start:null,end:null},mapNameEnabled:!1,mapNameFilter:"all",playerFilter:{mode:"none",players:[]}}}:{gameFilter:"all",dateRange:{start:null,end:null},mapNameFilter:"all",playerFilter:{mode:"none",players:[]},highlightedPlayer:l,useIndependentFilters:!0,independentFilters:{gameTypeEnabled:!1,gameFilter:"all",dateRangeEnabled:!1,dateRange:{start:null,end:null},mapNameEnabled:!1,mapNameFilter:"all",playerFilter:{mode:"none",players:[]}}}),e.category==="comparison"&&e.redirectTo.subTab==="comparison"){const a=b.highlightedPlayer||"",t=p(e.description,a);t&&g({playerComparisonState:{selectedPlayer1:a,selectedPlayer2:t,showDetailedStats:!0}})}if(e.category==="comparison"&&e.redirectTo.subTab==="pairing"){const a=e.description.toLowerCase().includes("loup");g({selectedPairingTab:a?"wolves":"lovers"})}if(e.category==="kills"&&e.redirectTo.subTab==="deathStats"){const a=e.description.match(/(Villageois|Loups|Autres)/i);a&&g({deathStatsSelectedCamp:a[1]});let t=10;const r=e.description.match(/min\.\s*(\d+)/);r&&(t=parseInt(r[1],10));let c="totalKills";const n=e.redirectTo.chartSection;n&&(n==="killers-total"?c="totalKills":n==="killers-average"?c="averageKills":n==="deaths-total"?c="totalDeaths":n==="survivors-average"&&(c="survivalRate")),g({deathStatisticsState:{selectedCamp:a?.[1]||"Tous les camps",minGamesForAverage:t,focusChart:c}})}if(e.category==="history"&&e.redirectTo.subTab==="history"&&g({selectedPlayerName:b.highlightedPlayer||"",groupingMethod:"session"}),e.category==="series"&&e.redirectTo.subTab==="series"){let a="wins";const t=e.title.toLowerCase(),r=e.description.toLowerCase();t.includes("défaite")||r.includes("défaite")?a="losses":t.includes("loup")||r.includes("loup")?a="loup":t.includes("villageois")||r.includes("villageois")?a="villageois":(t.includes("victoire")||r.includes("victoire"))&&(a="wins"),g({selectedSeriesType:a})}if(e.category==="general"&&e.redirectTo.subTab==="playersGeneral"){let a=10;const t=e.description.match(/min\.\s*(\d+)/);t&&(a=parseInt(t[1],10));let r="winRate",c="best";const n=e.title.toLowerCase(),j=e.description.toLowerCase();n.includes("participation")||j.includes("participation")?r="participation":(n.includes("taux de victoire")||j.includes("taux de victoire"))&&(r="winRate",(n.includes("moins bon")||n.includes("mauvais")||j.includes("moins bon")||j.includes("mauvais"))&&(c="worst")),g({playersGeneralState:{minGamesForWinRate:a,winRateOrder:c,focusChart:r}})}if(e.category==="performance"&&e.redirectTo.subTab==="campPerformance"){const a=e.redirectTo.chartSection;let t="Villageois",r=1;a&&(a==="camp-loup"?t="Loup":a==="camp-villageois"?t="Villageois":a==="camp-idiot"?t="Idiot du Village":a==="camp-amoureux"?t="Amoureux":(a==="solo-roles"||a==="hall-of-fame")&&(t="Villageois"));const c=e.description.match(/min\.\s*(\d+)/);c&&(r=parseInt(c[1],10));let n="player-performance";(a==="solo-roles"||a==="hall-of-fame")&&(n="top-performers"),g({campPerformanceState:{selectedCampPerformanceView:n,selectedCampPerformanceCamp:t,selectedCampPerformanceMinGames:r}})}C(e.redirectTo.tab,e.redirectTo.subTab)},p=(e,i)=>{const l=[/avec ([^:]+?):/,/contre ([^:]+?):/];for(const a of l){const t=e.match(a);if(t&&t[1]){const r=t[1].trim();if(r!==i)return r}}return null},P=e=>{if(!e.redirectTo)return"Aucune navigation disponible";switch(e.category){case"general":if(e.redirectTo.subTab==="playersGeneral"){const a=e.description.match(/min\.\s*(\d+)/),t=a?parseInt(a[1],10):10,r=e.title.toLowerCase(),c=f==="modded"?" (Filtre parties moddées activé)":" (Filtres réinitialisés)";return r.includes("taux de victoire")?`Classement: ${e.rank}${e.totalRanked?`/${e.totalRanked} joueurs`:""} - Cliquez pour voir les taux de victoire (min. ${t} parties)${c}`:r.includes("participation")?`Classement: ${e.rank}${e.totalRanked?`/${e.totalRanked} joueurs`:""} - Cliquez pour voir les participations${c}`:`Classement: ${e.rank}${e.totalRanked?`/${e.totalRanked} joueurs`:""} - Cliquez pour voir le classement général des joueurs${c}`}break;case"history":if(e.redirectTo.subTab==="history")return"Cliquez pour voir l'historique détaillé du joueur par map";break;case"comparison":if(e.redirectTo.subTab==="comparison")return`Cliquez pour comparer avec ${p(e.description,b.highlightedPlayer||"")||"ce joueur"}`;if(e.redirectTo.subTab==="pairing")return"Cliquez pour voir les statistiques de paires";break;case"kills":if(e.redirectTo.subTab==="deathStats"){const a=e.description.match(/(Villageois|Loups|Autres)/i),t=e.description.match(/min\.\s*(\d+)/),r=t?parseInt(t[1],10):10,c=a?.[1]||"Tous les camps",n=e.redirectTo.chartSection;let j="kills et morts";return n==="killers-total"?j="total des kills":n==="killers-average"?j=`moyenne des kills (min. ${r} parties)`:n==="deaths-total"?j="total des morts":n==="survivors-average"&&(j=`taux de survie (min. ${r} parties)`),`Cliquez pour voir les statistiques de ${j} ${c!=="Tous les camps"?`en ${c}`:""}`}break;case"series":if(e.redirectTo.subTab==="series"){const a=e.title.toLowerCase(),t=e.description.toLowerCase();return a.includes("défaite")||t.includes("défaite")?"Cliquez pour voir les séries de défaites":a.includes("loup")||t.includes("loup")?"Cliquez pour voir les séries Loups":a.includes("villageois")||t.includes("villageois")?"Cliquez pour voir les séries Villageois":a.includes("victoire")||t.includes("victoire")?"Cliquez pour voir les séries de victoires":"Cliquez pour voir les séries consécutives"}break;case"performance":if(e.redirectTo.subTab==="campPerformance"){const a=e.redirectTo.chartSection,t=f==="modded"?" (Filtre parties moddées activé)":" (Filtres réinitialisés)";return a==="camp-loup"?`Cliquez pour voir les performances camp Loup${t}`:a==="camp-villageois"?`Cliquez pour voir les performances camp Villageois${t}`:a==="camp-idiot"?`Cliquez pour voir les performances camp Idiot du Village${t}`:a==="camp-amoureux"?`Cliquez pour voir les performances camp Amoureux${t}`:a==="solo-roles"?`Cliquez pour voir le Hall of Fame (tous rôles solo)${t}`:a==="hall-of-fame"?`Cliquez pour voir le Hall of Fame (toutes performances)${t}`:`Cliquez pour voir les performances par camp${t}`}break}return`Cliquez pour voir ${e.redirectTo.subTab}`+(f==="modded"?" (Filtre parties moddées activé)":" (Filtres réinitialisés)")},N=e=>h[e]||R(e),y=e=>{const i=[/avec ([^:]+?):/,/contre ([^:]+?):/];let l=e;return i.forEach(a=>{const t=e.match(a);if(t&&t[1]){const r=t[1].trim(),n=`<span class="player-name-highlight" style="color: ${N(r)};">${r}</span>`;l=l.replace(r,n)}}),l};if(o.length===0)return s.jsxs("div",{className:"achievements-empty",children:[s.jsx("h4",{children:u}),s.jsx("p",{children:T||"Aucun succès dans cette catégorie"})]});const k=o.filter(e=>e.category!=="comparison"&&e.type==="good").sort((e,i)=>(e.rank??999)-(i.rank??999)),S=o.filter(e=>e.category!=="comparison"&&e.type==="bad").sort((e,i)=>(e.rank??999)-(i.rank??999)),$=o.filter(e=>e.category==="comparison");return s.jsxs("div",{className:"achievements-container",children:[s.jsx("h4",{children:u}),k.length>0&&s.jsxs("div",{className:"achievements-section good-achievements",children:[s.jsx("h5",{children:"🏆 Classements"}),s.jsx("div",{className:"achievements-grid",children:k.map(e=>s.jsxs("div",{className:`achievement-card good rank-${e.rank}`,onClick:i=>d(e,i),title:P(e),children:[s.jsxs("div",{className:"achievement-header",children:[s.jsx("span",{className:"achievement-title",children:e.title}),s.jsxs("span",{className:"achievement-rank",children:["#",e.rank,e.totalRanked?`/${e.totalRanked}`:""]})]}),s.jsx("p",{className:"achievement-description",children:e.description})]},e.id))})]}),S.length>0&&s.jsxs("div",{className:"achievements-section bad-achievements",children:[s.jsx("h5",{children:"💀 Classements (Inversés)"}),s.jsx("div",{className:"achievements-grid",children:S.map(e=>s.jsxs("div",{className:`achievement-card bad rank-${e.rank}`,onClick:i=>d(e,i),title:P(e),children:[s.jsxs("div",{className:"achievement-header",children:[s.jsx("span",{className:"achievement-title",children:e.title}),s.jsxs("span",{className:"achievement-rank",children:["#",e.rank,e.totalRanked?`/${e.totalRanked}`:""]})]}),s.jsx("p",{className:"achievement-description",children:e.description})]},e.id))})]}),$.length>0&&s.jsxs("div",{className:"achievements-section comparison-achievements",children:[s.jsx("h5",{children:"📊 Statistiques Face-à-Face"}),s.jsx("div",{className:"achievements-grid",children:$.map(e=>s.jsxs("div",{className:"achievement-card comparison",onClick:i=>d(e,i),title:P(e),children:[s.jsx("div",{className:"achievement-header",children:s.jsx("span",{className:"achievement-title",children:e.title})}),s.jsx("p",{className:"achievement-description",dangerouslySetInnerHTML:{__html:y(e.description)}})]},e.id))})]})]})}function M(){const{settings:o,updateSettings:u}=A(),{navigateToTab:T}=w(),{data:f,isLoading:C,error:g}=G(),{data:x,isLoading:b,error:m}=q(o.highlightedPlayer),[h,d]=v.useState(""),[p,P]=v.useState("all"),N=v.useMemo(()=>{if(!f||!f.GameStats)return[];const e=new Map;return f.GameStats.forEach(i=>{const l=new Date(i.StartDate);i.PlayerStats.forEach(a=>{const t=F(a.Username);e.has(t)||e.set(t,{games:0,wins:0,firstDate:l,lastDate:l});const r=e.get(t);r.games++,a.Victorious&&r.wins++,l<r.firstDate&&(r.firstDate=l),l>r.lastDate&&(r.lastDate=l)})}),Array.from(e.entries()).map(([i,l])=>({name:i,totalGames:l.games,totalWins:l.wins,winRate:l.games>0?l.wins/l.games*100:0,firstGameDate:l.firstDate.toLocaleDateString("fr-FR"),lastGameDate:l.lastDate.toLocaleDateString("fr-FR"),isHighlighted:i===o.highlightedPlayer}))},[f,o.highlightedPlayer]),y=v.useMemo(()=>{if(!h.trim())return N;const e=h.toLowerCase();return N.filter(i=>i.name.toLowerCase().includes(e))},[N,h]),k=v.useMemo(()=>[...y].sort((e,i)=>i.totalGames-e.totalGames),[y]),S=e=>{u({highlightedPlayer:e}),d("")},$=e=>{u({highlightedPlayer:e}),T("players","history")};return C?s.jsxs("div",{className:"player-selection-loading",children:[s.jsx("div",{className:"loading-spinner"}),s.jsx("p",{children:"Chargement des joueurs..."})]}):g?s.jsxs("div",{className:"player-selection-error",children:[s.jsx("h2",{children:"Erreur"}),s.jsxs("p",{children:["Impossible de charger les données des joueurs: ",g]})]}):!f||N.length===0?s.jsxs("div",{className:"player-selection-empty",children:[s.jsx("h2",{children:"Aucune donnée disponible"}),s.jsx("p",{children:"Aucun joueur trouvé dans les données."})]}):s.jsxs("div",{className:"player-selection-container",children:[s.jsxs("div",{className:"player-selection-header",children:[s.jsx("h2",{children:"Sélection de Joueur"}),s.jsx("p",{className:"header-description",children:"Choisissez un joueur pour le mettre en évidence dans tous les graphiques."}),s.jsxs("div",{className:"search-controls",children:[s.jsxs("div",{className:"search-box",children:[s.jsx("input",{type:"text",placeholder:"Rechercher un joueur...",value:h,onChange:e=>d(e.target.value),className:"search-input"}),s.jsx("span",{className:"search-icon",children:"🔍"})]}),s.jsxs("div",{className:"player-count",children:[y.length," joueur",y.length!==1?"s":"",h&&` (filtré${y.length!==1?"s":""} de ${N.length})`]})]})]}),s.jsx("div",{className:"player-display",children:h?y.length>0?s.jsxs("div",{className:"search-results",children:[s.jsxs("div",{className:"search-results-header",children:[s.jsx("h3",{children:"Résultats de recherche:"}),s.jsx("button",{className:"clear-search-btn",onClick:()=>d(""),children:"Effacer la recherche"})]}),s.jsx("div",{className:"suggestion-list",children:k.map(e=>s.jsxs("button",{className:`suggestion-btn ${e.isHighlighted?"highlighted":""}`,onClick:()=>S(e.name),children:[e.name," (",e.totalGames," parties, ",e.winRate.toFixed(1),"% victoires)",e.isHighlighted&&s.jsx("span",{className:"highlight-indicator",children:" ★"})]},e.name))})]}):s.jsxs("div",{className:"no-results",children:[s.jsxs("p",{children:['Aucun joueur trouvé pour "',h,'"']}),s.jsx("button",{className:"clear-search-btn",onClick:()=>d(""),children:"Effacer la recherche"})]}):o.highlightedPlayer?(()=>{const e=N.find(i=>i.name===o.highlightedPlayer);return e?s.jsxs("div",{className:"single-player-card highlighted",onClick:()=>$(e.name),children:[s.jsxs("div",{className:"player-card-header",children:[s.jsx("h3",{className:"player-name",children:e.name}),s.jsx("span",{className:"highlight-badge",children:"★ Mis en évidence"})]}),s.jsxs("div",{className:"player-actions",children:[s.jsxs("div",{className:"achievements-section",children:[b?s.jsxs("div",{className:"achievements-loading",children:[s.jsx("div",{className:"loading-spinner"}),s.jsx("p",{children:"Chargement des classements..."})]}):m?s.jsx("div",{className:"achievements-error",children:s.jsxs("p",{children:["❌ Erreur lors du chargement des classements: ",m]})}):x?s.jsx(D,{achievements:p==="all"?x.allGamesAchievements:x.moddedOnlyAchievements,title:p==="all"?"Classements - Toutes les parties":"Classements - Parties moddées",emptyMessage:"Aucun classement dans cette catégorie",achievementType:p}):s.jsx("div",{className:"achievements-empty",children:s.jsx("p",{children:"Aucun classement disponible pour ce joueur"})}),s.jsxs("div",{className:"achievements-filter",children:[s.jsx("button",{className:`filter-btn ${p==="all"?"active":""}`,onClick:i=>{i.stopPropagation(),P("all")},children:"Toutes les parties"}),s.jsx("button",{className:`filter-btn ${p==="modded"?"active":""}`,onClick:i=>{i.stopPropagation(),P("modded")},children:"Parties moddées"})]}),s.jsx("button",{className:"highlight-btn active",onClick:i=>{i.stopPropagation(),u({highlightedPlayer:null})},children:"★ Retirer la mise en évidence"})]}),s.jsxs("div",{className:"player-period",children:[s.jsx("span",{className:"period-label",children:"Période d'activité:"}),s.jsxs("span",{className:"period-range",children:[e.firstGameDate," - ",e.lastGameDate]})]})]})]}):s.jsxs("div",{className:"no-player-found",children:[s.jsxs("p",{children:['Le joueur "',o.highlightedPlayer,`" n'a pas été trouvé dans les données.`]}),s.jsx("button",{className:"clear-selection-btn",onClick:()=>u({highlightedPlayer:null}),children:"Effacer la sélection"})]})})():s.jsx("div",{className:"player-selection-prompt",children:s.jsxs("div",{className:"selection-prompt-content",children:[s.jsx("h2",{children:"Sélectionnez un joueur"}),s.jsx("p",{children:"Utilisez la recherche ci-dessus pour trouver et sélectionner un joueur à mettre en évidence."}),y.length>0&&s.jsxs("div",{className:"suggested-players",children:[s.jsx("h3",{children:"Joueurs suggérés:"}),s.jsx("div",{className:"suggestion-list",children:k.slice(0,5).map(e=>s.jsxs("button",{className:"suggestion-btn",onClick:()=>S(e.name),children:[e.name," (",e.totalGames," parties)"]},e.name))})]})]})})})]})}export{M as PlayerSelectionPage};
