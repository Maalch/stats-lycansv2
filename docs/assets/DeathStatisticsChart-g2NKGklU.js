import{u as ge,r as M,c as pe,a as ye,j as e}from"./index-C8B1stLc.js";import{u as oe}from"./baseStatsHook-Bdc7r5QO.js";import{g as W}from"./gameUtils-C0qLdSzT.js";import{F as U,B as G,C as w,X as q,Y as $,a as J}from"./FullscreenChart-Dwu8UuMU.js";import{a as ve,m as le}from"./api-Bgu0cxDK.js";import{R as Z,T as X}from"./CategoricalChart-CI2HNEhr.js";const a={SURVIVOR:"SURVIVOR",VOTE:"VOTE",WEREWOLF_KILL:"WEREWOLF_KILL",HUNTER_SHOT:"HUNTER_SHOT",BOUNTY_HUNTER:"BOUNTY_HUNTER",LOVER_DEATH:"LOVER_DEATH",LOVER_WEREWOLF:"LOVER_WEREWOLF",BEAST_KILL:"BEAST_KILL",ASSASSIN_POTION:"ASSASSIN_POTION",HAUNTED_POTION:"HAUNTED_POTION",ZOMBIE_KILL:"ZOMBIE_KILL",RESURRECTED_WEREWOLF:"RESURRECTED_WEREWOLF",AVENGER_KILL:"AVENGER_KILL",AGENT_KILL:"AGENT_KILL",SHERIFF_KILL:"SHERIFF_KILL",EXPLOSION:"EXPLOSION",CRUSHED:"CRUSHED",STARVATION:"STARVATION",FALL_DEATH:"FALL_DEATH",BESTIAL_DEATH:"BESTIAL_DEATH",AVATAR_DEATH:"AVATAR_DEATH",DISCONNECT:"DISCONNECT",UNKNOWN:"UNKNOWN"};function xe(x){const h=new Set;x.filter(E=>!E.LegacyData||E.LegacyData.deathInformationFilled===!0).forEach(E=>{E.PlayerStats.forEach(H=>{if(E.PlayerStats.some(k=>k.KillerName===H.Username)){const k=W(H.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0});h.add(k)}})});const g=Array.from(h),A=["Villageois","Loup","Amoureux"];return[...A.filter(E=>g.includes(E)),...g.filter(E=>!A.includes(E)).sort()]}function fe(x){if(!x)return null;const h=x.match(/^([NJM])(\d+)$/);if(!h)return null;const[,D,g]=h,A=parseInt(g,10);let p;switch(D){case"N":p="Nuit";break;case"J":p="Jour";break;case"M":p="Meeting";break;default:return null}return{phase:p,day:A,originalString:x}}function ce(x){if(!x||x==="N/A")return a.SURVIVOR;const h=x.trim().toLowerCase();if(h.includes("vote"))return a.VOTE;if(h.includes("tué par loup")||h.includes("tué par un loup")||h.includes("tué par loup ressuscité"))return h.includes("ressuscité")?a.RESURRECTED_WEREWOLF:a.WEREWOLF_KILL;if(h.includes("amoureux")||h.includes("son amoureux"))return h.includes("tué par loup amoureux")?a.LOVER_WEREWOLF:a.LOVER_DEATH;if(h.includes("chasseur")||h.includes("balle"))return h.includes("primes")?a.BOUNTY_HUNTER:a.HUNTER_SHOT;if(h.includes("potion")){if(h.includes("assassin"))return a.ASSASSIN_POTION;if(h.includes("hanté"))return a.HAUNTED_POTION}return h.includes("la bête")?a.BEAST_KILL:h.includes("zombie")?a.ZOMBIE_KILL:h.includes("vengeur")?a.AVENGER_KILL:h.includes("l'agent")?a.AGENT_KILL:h.includes("shérif")?a.SHERIFF_KILL:h.includes("explosé")?a.EXPLOSION:h.includes("écrasé")?a.CRUSHED:h.includes("faim")?a.STARVATION:h.includes("chute")?a.FALL_DEATH:h.includes("bestiale")?a.BESTIAL_DEATH:h.includes("avatar")?a.AVATAR_DEATH:h==="déco"?a.DISCONNECT:a.UNKNOWN}function ne(x){switch(x){case a.SURVIVOR:return"Survivant";case a.VOTE:return"Mort aux votes";case a.WEREWOLF_KILL:return"Tué par un loup";case a.HUNTER_SHOT:return"Abattu par un chasseur";case a.BOUNTY_HUNTER:return"Tué par un chasseur de primes";case a.LOVER_DEATH:return"Mort par amoureux";case a.LOVER_WEREWOLF:return"Tué par son amoureux loup";case a.BEAST_KILL:return"Dévoré par la Bête";case a.ASSASSIN_POTION:return"Empoisonné (Assassin)";case a.HAUNTED_POTION:return"Empoisonné (Hanté)";case a.ZOMBIE_KILL:return"Tué par un zombie";case a.RESURRECTED_WEREWOLF:return"Tué par un loup ressuscité";case a.AVENGER_KILL:return"Tué par un vengeur";case a.AGENT_KILL:return"Éliminé par l'Agent";case a.SHERIFF_KILL:return"Abattu par le Shérif";case a.EXPLOSION:return"Mort dans une explosion";case a.CRUSHED:return"Écrasé";case a.STARVATION:return"Mort de faim";case a.FALL_DEATH:return"Mort de chute";case a.BESTIAL_DEATH:return"Mort bestiale";case a.AVATAR_DEATH:return"Mort liée à l'Avatar";case a.DISCONNECT:return"Déconnexion";case a.UNKNOWN:default:return"Mort inconnue"}}function ie(x){switch(x){case a.SURVIVOR:return"Survivant";case a.VOTE:return"Mort aux votes";case a.WEREWOLF_KILL:return"Kill en Loup";case a.HUNTER_SHOT:return"Tir de Chasseur";case a.BOUNTY_HUNTER:return"Kill en Chasseur de primes";case a.LOVER_DEATH:return"Kill de son amoureux";case a.LOVER_WEREWOLF:return"Kill en Loup amoureux";case a.BEAST_KILL:return"Kill en Bête";case a.ASSASSIN_POTION:return"Kill avec Potion (Assassin)";case a.HAUNTED_POTION:return"Kill avec Potion (Hanté)";case a.ZOMBIE_KILL:return"Kill en Zombie";case a.RESURRECTED_WEREWOLF:return"Kill en Loup ressuscité";case a.AVENGER_KILL:return"Kill en Vengeur";case a.AGENT_KILL:return"Kill en Agent";case a.SHERIFF_KILL:return"Kill en Shérif";case a.EXPLOSION:return"Explosion";case a.CRUSHED:return"Écrasement";case a.STARVATION:return"Famine";case a.FALL_DEATH:return"Chute mortelle";case a.BESTIAL_DEATH:return"Tuerie bestiale";case a.AVATAR_DEATH:return"Mort d'Avatar";case a.DISCONNECT:return"Déconnexion";case a.UNKNOWN:default:return"Kill inconnu"}}function Te(x){const h=new Set;x.forEach(A=>{A.PlayerStats.forEach(p=>{if(p.DeathType){const E=ce(p.DeathType);h.add(E)}})});const D=Array.from(h),g=[a.WEREWOLF_KILL,a.VOTE,a.HUNTER_SHOT,a.ZOMBIE_KILL,a.ASSASSIN_POTION,a.HAUNTED_POTION,a.AVENGER_KILL,a.LOVER_DEATH,a.SURVIVOR];return[...g.filter(A=>D.includes(A)),...D.filter(A=>!g.includes(A)).sort()]}function Se(x,h){return x.PlayerStats.filter(D=>D.DeathTiming||D.DeathType).map(D=>{let g=null;if(D.KillerName){const p=x.PlayerStats.find(E=>E.Username===D.KillerName);p&&(g=W(p.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0}))}const A=ce(D.DeathType);return{playerName:D.Username,deathTiming:fe(D.DeathTiming),deathType:A,killerName:D.KillerName,killerCamp:g}}).filter(D=>!h||h==="Tous les camps"?!0:D.killerCamp===h)}function De(x,h){if(x.length===0)return null;const D=x.filter(r=>!r.LegacyData||r.LegacyData.deathInformationFilled===!0);if(D.length===0)return null;const g=[],A={};D.forEach(r=>{Se(r,h).forEach(S=>{g.push({...S,gameId:r.Id})}),r.PlayerStats.forEach(S=>{const B=S.Username;(!h||h==="Tous les camps"||W(S.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===h)&&(A[B]=(A[B]||0)+1)})});const p=g.length,E=D.length,H=E>0?p/E:0,j={},k={Nuit:0,Jour:0,Meeting:0};g.forEach(r=>{if(r.deathTiming){const n=`${r.deathTiming.phase}-${r.deathTiming.day}`;j[n]=(j[n]||0)+1,k[r.deathTiming.phase]++}});const V=Object.entries(j).map(([r,n])=>{const[S,B]=r.split("-");return{phase:S,day:parseInt(B,10),count:n,percentage:p>0?n/p*100:0}}).sort((r,n)=>{if(r.phase!==n.phase){const S={Nuit:0,Jour:1,Meeting:2};return S[r.phase]-S[n.phase]}return r.day-n.day}),_={};g.forEach(r=>{_[r.deathType]=(_[r.deathType]||0)+1});const c=Object.entries(_).map(([r,n])=>({type:r,count:n,percentage:p>0?n/p*100:0})).sort((r,n)=>n.count-r.count),K={};g.forEach(r=>{if(r.killerName){K[r.killerName]||(K[r.killerName]={kills:0,victims:new Set,killsByDeathType:{}}),K[r.killerName].kills++,K[r.killerName].victims.add(r.playerName);const n=r.deathType;K[r.killerName].killsByDeathType[n]=(K[r.killerName].killsByDeathType[n]||0)+1}});const T=Object.entries(K).map(([r,n])=>{const S=A[r]||0,B=S>0?n.kills/S:0;return{killerName:r,kills:n.kills,victims:Array.from(n.victims),percentage:p>0?n.kills/p*100:0,gamesPlayed:S,averageKillsPerGame:B,killsByDeathType:n.killsByDeathType}}).sort((r,n)=>n.kills-r.kills),b={};g.forEach(r=>{b[r.playerName]||(b[r.playerName]={totalDeaths:0,deathsByPhase:{Nuit:0,Jour:0,Meeting:0},deathsByType:{},killedBy:{},deathDays:[]});const n=b[r.playerName];n.totalDeaths++,r.deathTiming&&(n.deathsByPhase[r.deathTiming.phase]++,n.deathDays.push(r.deathTiming.day)),n.deathsByType[r.deathType]=(n.deathsByType[r.deathType]||0)+1,r.killerName&&(n.killedBy[r.killerName]=(n.killedBy[r.killerName]||0)+1)});const Y=Object.entries(b).map(([r,n])=>({playerName:r,totalDeaths:n.totalDeaths,deathsByPhase:n.deathsByPhase,deathsByType:n.deathsByType,killedBy:n.killedBy,averageDeathDay:n.deathDays.length>0?n.deathDays.reduce((S,B)=>S+B,0)/n.deathDays.length:null,deathRate:A[r]>0?n.totalDeaths/A[r]:0})).sort((r,n)=>n.totalDeaths-r.totalDeaths),z=Object.entries(k).reduce((r,[n,S])=>S>r.count?{phase:n,count:S}:r,{phase:"Nuit",count:0}).phase,F={};g.forEach(r=>{r.deathTiming&&(F[r.deathTiming.day]=(F[r.deathTiming.day]||0)+1)});const Q=Object.entries(F).reduce((r,[n,S])=>S>r.count?{day:parseInt(n,10),count:S}:r,{day:1,count:0}).day,ee=c.length>0?c[0].type:null,te=T.length>0?T[0].killerName:null;return{totalDeaths:p,totalGames:E,averageDeathsPerGame:H,deathsByTiming:V,deathsByPhase:k,deathsByType:c,killerStats:T,playerDeathStats:Y,mostDeadlyPhase:z,mostDeadlyDay:Q,mostCommonDeathType:ee,mostDeadlyKiller:te}}function Ae(x){return oe(h=>De(h,x))}function Ee(){return oe(x=>xe(x))}function Oe(){const{navigateToGameDetails:x,navigationState:h,updateNavigationState:D}=ge(),[g,A]=M.useState(h.deathStatsSelectedCamp||"Tous les camps"),[p,E]=M.useState(5),{data:H}=Ee(),{data:j,isLoading:k,error:V}=Ae(g),{data:_}=pe(),{settings:c}=ye(),K=ve(),T=M.useMemo(()=>_?Te(_.GameStats):[],[_]),b=M.useMemo(()=>{const t={};T.forEach(l=>{const y=ie(l);y==="Kill en Loup"?t[l]=K.Loup:y==="Mort aux votes"?t[l]="var(--chart-color-1)":y==="Tir de Chasseur"?t[l]=K.Chasseur:y==="Kill en Zombie"?t[l]=K.Vaudou:y.includes("Kill avec Potion")?t[l]=K.Alchimiste:y==="Kill en Vengeur"||y==="Kill de son amoureux"?t[l]="var(--chart-color-2)":y==="Déconnexion"?t[l]="var(--chart-color-3)":y==="Survivant"&&(t[l]="var(--chart-color-4)")});const m=["var(--accent-primary)","var(--accent-secondary)","var(--accent-tertiary)","#8884d8","#82ca9d","#ffc658","#ff7300","#00c49f","#ffbb28"];let d=0;return T.forEach(l=>{t[l]||(t[l]=m[d%m.length],d++)}),t},[T,K]),Y=t=>{A(t),D({deathStatsSelectedCamp:t})},{totalKillsData:z,averageKillsData:F,highlightedPlayerAddedToTotal:Q,highlightedPlayerAddedToAverage:ee,gamesWithKillers:te,totalEligibleForAverage:r}=M.useMemo(()=>{if(!j)return{totalKillsData:[],averageKillsData:[],highlightedPlayerAddedToTotal:!1,highlightedPlayerAddedToAverage:!1,gamesWithKillers:0,totalEligibleForAverage:0};const t=j.killerStats.sort((o,v)=>v.kills-o.kills).slice(0,15),m=c.highlightedPlayer&&t.some(o=>o.killerName===c.highlightedPlayer),d=t.map(o=>{const v={name:o.killerName,value:o.kills,victims:o.victims.length,percentage:o.percentage,gamesPlayed:o.gamesPlayed,averageKillsPerGame:o.averageKillsPerGame,isHighlightedAddition:!1};return T.forEach(P=>{v[P]=o.killsByDeathType[P]||0}),v});let l=!1;if(c.highlightedPlayer&&!m){const o=j.killerStats.find(v=>v.killerName===c.highlightedPlayer);if(o){const v={name:o.killerName,value:o.kills,victims:o.victims.length,percentage:o.percentage,gamesPlayed:o.gamesPlayed,averageKillsPerGame:o.averageKillsPerGame,isHighlightedAddition:!0};T.forEach(P=>{v[P]=o.killsByDeathType[P]||0}),d.push(v),l=!0}}const y=j.killerStats.filter(o=>o.gamesPlayed>=p),O=y.sort((o,v)=>v.averageKillsPerGame-o.averageKillsPerGame).slice(0,15),I=c.highlightedPlayer&&O.some(o=>o.killerName===c.highlightedPlayer),u=O.map(o=>{const v={name:o.killerName,value:o.averageKillsPerGame,victims:o.victims.length,percentage:o.percentage,gamesPlayed:o.gamesPlayed,averageKillsPerGame:o.averageKillsPerGame,isHighlightedAddition:!1};return T.forEach(P=>{const C=o.killsByDeathType[P]||0;v[P]=o.gamesPlayed>0?C/o.gamesPlayed:0}),v});let N=!1;if(c.highlightedPlayer&&!I){const o=j.killerStats.find(v=>v.killerName===c.highlightedPlayer);if(o){const v={name:o.killerName,value:o.averageKillsPerGame,victims:o.victims.length,percentage:o.percentage,gamesPlayed:o.gamesPlayed,averageKillsPerGame:o.averageKillsPerGame,isHighlightedAddition:!0};T.forEach(P=>{const C=o.killsByDeathType[P]||0;v[P]=o.gamesPlayed>0?C/o.gamesPlayed:0}),u.push(v),N=!0}}return{totalKillsData:d,averageKillsData:u,highlightedPlayerAddedToTotal:l,highlightedPlayerAddedToAverage:N,gamesWithKillers:j.totalGames,totalEligibleForAverage:y.length}},[j,c.highlightedPlayer,p,T]),{totalDeathsData:n,survivalRateData:S,highlightedPlayerAddedToDeaths:B,highlightedPlayerAddedToSurvival:se}=M.useMemo(()=>{if(!j||!_)return{totalDeathsData:[],survivalRateData:[],highlightedPlayerAddedToDeaths:!1,highlightedPlayerAddedToSurvival:!1};const t={},m=_.GameStats.filter(i=>!i.LegacyData||i.LegacyData.deathInformationFilled===!0);m.forEach(i=>{i.PlayerStats.forEach(s=>{const f=s.Username;(!g||g==="Tous les camps"||W(s.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===g)&&(t[f]=(t[f]||0)+1)})});const d=j.playerDeathStats.sort((i,s)=>s.totalDeaths-i.totalDeaths).slice(0,15),l=c.highlightedPlayer&&d.some(i=>i.playerName===c.highlightedPlayer),y=d.map(i=>{const s=t[i.playerName]||0,f=s>0?(s-i.totalDeaths)/s*100:0,R={name:i.playerName,value:i.totalDeaths,totalDeaths:i.totalDeaths,gamesPlayed:s,deathRate:i.deathRate,survivalRate:f,isHighlightedAddition:!1};return T.forEach(L=>{R[L]=i.deathsByType[L]||0}),R});let O=!1;if(c.highlightedPlayer&&!l){const i=j.playerDeathStats.find(s=>s.playerName===c.highlightedPlayer);if(i){const s=t[i.playerName]||0,f=s>0?(s-i.totalDeaths)/s*100:0,R={name:i.playerName,value:i.totalDeaths,totalDeaths:i.totalDeaths,gamesPlayed:s,deathRate:i.deathRate,survivalRate:f,isHighlightedAddition:!0};T.forEach(L=>{R[L]=i.deathsByType[L]||0}),y.push(R),O=!0}}const I={},u={};m.forEach(i=>{i.PlayerStats.forEach(s=>{const f=s.Username;if((!g||g==="Tous les camps"||W(s.MainRoleInitial,{regroupLovers:!0,regroupVillagers:!0,regroupTraitor:!0})===g)&&s.DeathType&&s.DeathType!=="N/A"){u[f]||(u[f]={totalDeaths:0,deathsByType:{}}),u[f].totalDeaths++;let L="Survivant";s.DeathType.includes("vote")||s.DeathType.includes("Vote")?L="Mort aux votes":s.DeathType.includes("Loup")||s.DeathType.includes("loup")?L="Kill en Loup":s.DeathType.includes("Chasseur")||s.DeathType.includes("chasseur")?L="Tir de Chasseur":s.DeathType.includes("Potion")||s.DeathType.includes("potion")?L="Kill avec Potion":s.DeathType.includes("Zombie")||s.DeathType.includes("zombie")?L="Kill en Zombie":s.DeathType.includes("Déconnexion")||s.DeathType.includes("déconnexion")?L="Déconnexion":L=s.DeathType,u[f].deathsByType[L]=(u[f].deathsByType[L]||0)+1}})}),Object.entries(t).forEach(([i,s])=>{if(s>=p){const f=u[i],R=f?f.totalDeaths:0,L=f?f.deathsByType:{},ae=s>0?(s-R)/s*100:0,re=s>0?R/s:0;I[i]={playerName:i,totalDeaths:R,deathsByType:L,gamesPlayed:s,survivalRate:ae,deathRate:re}}});const o=Object.values(I).sort((i,s)=>s.survivalRate-i.survivalRate).slice(0,15),v=c.highlightedPlayer&&o.some(i=>i.playerName===c.highlightedPlayer),P=o.map(i=>{const s={name:i.playerName,value:i.survivalRate,totalDeaths:i.totalDeaths,gamesPlayed:i.gamesPlayed,deathRate:i.deathRate,survivalRate:i.survivalRate,isHighlightedAddition:!1};return T.forEach(f=>{const R=i.deathsByType[f]||0;s[f]=i.gamesPlayed>0?R/i.gamesPlayed*100:0}),s});let C=!1;if(c.highlightedPlayer&&!v){let i=I[c.highlightedPlayer];if(!i){const s=t[c.highlightedPlayer]||0,f=u[c.highlightedPlayer],R=f?f.totalDeaths:0,L=f?f.deathsByType:{},ae=s>0?(s-R)/s*100:0,re=s>0?R/s:0;i={playerName:c.highlightedPlayer,totalDeaths:R,deathsByType:L,gamesPlayed:s,survivalRate:ae,deathRate:re}}if(i){const s={name:i.playerName,value:i.survivalRate,totalDeaths:i.totalDeaths,gamesPlayed:i.gamesPlayed,deathRate:i.deathRate,survivalRate:i.survivalRate,isHighlightedAddition:!0};T.forEach(f=>{const R=i.deathsByType[f]||0;s[f]=i.gamesPlayed>0?R/i.gamesPlayed*100:0}),P.push(s),C=!0}}return{totalDeathsData:y,survivalRateData:P,highlightedPlayerAddedToDeaths:O,highlightedPlayerAddedToSurvival:C}},[j,_,c.highlightedPlayer,p,T,g]);if(k)return e.jsx("div",{className:"donnees-attente",children:"Chargement des statistiques de mort..."});if(V)return e.jsxs("div",{className:"donnees-probleme",children:["Erreur: ",V]});if(!j)return e.jsx("div",{className:"donnees-manquantes",children:"Aucune donnée de mort disponible"});const he=({active:t,payload:m,label:d})=>{if(t&&m&&m.length){const l=m[0].payload,y=l.isHighlightedAddition,O=c.highlightedPlayer===l.name,I=T.reduce((u,N)=>u+(l[N]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[d,y&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Victimes totales:"})," ",I]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",l.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill:"}),T.map(u=>{const N=l[u]||0;return N===0?null:e.jsxs("p",{style:{color:b[u],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:b[u],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ie(u),":"]})," ",N]},u)})]}),y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),O&&!y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},de=({active:t,payload:m,label:d})=>{if(t&&m&&m.length){const l=m[0].payload,y=l.isHighlightedAddition,O=c.highlightedPlayer===l.name,I=l.gamesPlayed>=p,u=j?.killerStats.find(v=>v.killerName===l.name),N=T.reduce((v,P)=>v+(l[P]||0),0),o=u?u.kills:Math.round(N*l.gamesPlayed);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[d,y&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Moyenne par partie:"})," ",N.toFixed(2)," (",o," kills /",l.gamesPlayed," games)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",l.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de kill (moyenne):"}),T.map(v=>{const P=l[v]||0;if(P===0)return null;const C=u?u.killsByDeathType[v]||0:Math.round(P*l.gamesPlayed);return e.jsxs("p",{style:{color:b[v],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:b[v],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ie(v),":"]})," ",P.toFixed(2)," (",C," kills /",l.gamesPlayed," games)"]},v)})]}),y&&!I&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",p," parties)"]}),y&&I&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),O&&!y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},me=({active:t,payload:m,label:d})=>{if(t&&m&&m.length){const l=m[0].payload,y=l.isHighlightedAddition,O=c.highlightedPlayer===l.name,I=T.reduce((u,N)=>u+(l[N]||0),0);return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[d,y&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",I]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",l.gamesPlayed]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",l.survivalRate.toFixed(1),"%"]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort:"}),T.map(u=>{const N=l[u]||0;return N===0?null:e.jsxs("p",{style:{color:b[u],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:b[u],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ne(u),":"]})," ",N]},u)})]}),y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection personnelle"}),O&&!y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null},ue=({active:t,payload:m,label:d})=>{if(t&&m&&m.length){const l=m[0].payload,y=l.isHighlightedAddition,O=c.highlightedPlayer===l.name,I=l.gamesPlayed>=p;return e.jsxs("div",{style:{background:"var(--bg-secondary)",border:"1px solid var(--border-color)",borderRadius:"8px",padding:"12px",boxShadow:"0 4px 12px rgba(0,0,0,0.15)",color:"var(--text-primary)",fontSize:"0.9rem"},children:[e.jsxs("p",{style:{fontWeight:"bold",marginBottom:"8px",color:O?"var(--accent-primary)":"var(--text-primary)"},children:[d,y&&e.jsx("span",{style:{color:"var(--accent-primary)",fontSize:"0.8rem",fontStyle:"italic",marginLeft:"4px"},children:" (🎯)"})]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Taux de survie:"})," ",l.survivalRate.toFixed(1),"% (",l.gamesPlayed-l.totalDeaths," survies / ",l.gamesPlayed," parties)"]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Morts totales:"})," ",l.totalDeaths]}),e.jsxs("p",{style:{color:"var(--text-primary)",margin:"4px 0"},children:[e.jsx("strong",{children:"Parties jouées:"})," ",l.gamesPlayed]}),e.jsxs("div",{style:{margin:"8px 0",borderTop:"1px solid var(--border-color)",paddingTop:"8px"},children:[e.jsx("p",{style:{fontWeight:"bold",fontSize:"0.85rem",marginBottom:"4px"},children:"Répartition par type de mort (taux %):"}),T.map(u=>{const N=l[u]||0;return N===0?null:e.jsxs("p",{style:{color:b[u],margin:"2px 0",fontSize:"0.8rem"},children:[e.jsx("span",{style:{display:"inline-block",width:"12px",height:"12px",backgroundColor:b[u],marginRight:"6px",verticalAlign:"middle"}}),e.jsxs("strong",{children:[ne(u),":"]})," ",N.toFixed(1),"%"]},u)})]}),y&&!I&&e.jsxs("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:["🎯 Affiché via sélection (< ",p," parties)"]}),y&&I&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Affiché via sélection (hors top 15)"}),O&&!y&&e.jsx("div",{style:{fontSize:"0.75rem",color:"var(--accent-primary)",marginTop:"0.25rem",fontStyle:"italic"},children:"🎯 Joueur sélectionné"}),e.jsx("div",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",marginTop:"0.5rem",fontWeight:"bold",textAlign:"center",animation:"pulse 1.5s infinite"},children:"🖱️ Cliquez pour voir les parties"})]})}return null};return e.jsxs("div",{className:"lycans-players-stats",children:[e.jsx("h2",{children:"Statistiques de Tueurs"}),e.jsxs("div",{style:{marginBottom:"1.5rem",display:"flex",alignItems:"center",gap:"0.5rem"},children:[e.jsx("label",{htmlFor:"camp-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem",fontWeight:"bold"},children:"Camp du tueur :"}),e.jsxs("select",{id:"camp-select",value:g,onChange:t=>Y(t.target.value),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.5rem",fontSize:"0.9rem",minWidth:"150px"},children:[e.jsx("option",{value:"Tous les camps",children:"Tous les camps"}),H?.map(t=>e.jsx("option",{value:t,children:t},t))]})]}),e.jsxs("div",{className:"lycans-resume-conteneur",style:{marginBottom:"2rem"},children:[e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Total des morts"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-secondary)"},children:j.totalDeaths})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Tueurs identifiés"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--chart-color-1)"},children:j.killerStats.length})]}),e.jsxs("div",{className:"lycans-stat-carte",children:[e.jsx("h3",{children:"Nombre de parties enregistrées"}),e.jsx("div",{className:"lycans-valeur-principale",style:{color:"var(--accent-primary)"},children:te})]})]}),e.jsxs("div",{className:"lycans-graphiques-groupe",children:[e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Tueurs (Total)"}),Q&&c.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',c.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(U,{title:"Top Tueurs (Total)",children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:z,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:d})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:c.highlightedPlayer===d.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:c.highlightedPlayer===d.value?14:13,fontWeight:c.highlightedPlayer===d.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:d.value})}),e.jsx($,{label:{value:"Nombre total de victimes",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(he,{})}),T.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"kills",fill:b[t],onClick:m=>{const d={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};g!=="Tous les camps"&&(d.campFilter={selectedCamp:g,campFilterMode:"all-assignments"}),x(d)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,z.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus actifs (total)"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Tueurs (Moyenne par Partie)"}),ee&&c.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',c.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-average-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-average-select",value:p,onChange:t=>E(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:le.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(U,{title:"Top Tueurs (Moyenne par Partie)",children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:F,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:d})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:c.highlightedPlayer===d.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:c.highlightedPlayer===d.value?14:13,fontWeight:c.highlightedPlayer===d.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:d.value})}),e.jsx($,{label:{value:"Moyenne de victimes par partie",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(de,{})}),T.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"averageKills",fill:b[t],onClick:m=>{const d={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};g!=="Tous les camps"&&(d.campFilter={selectedCamp:g,campFilterMode:"all-assignments"}),x(d)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,F.filter(t=>!t.isHighlightedAddition).length)," des tueurs les plus efficaces (sur ",r," ayant au moins ",p," partie",p>1?"s":"",")"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Top Victimes"}),B&&c.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',c.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsx(U,{title:"Top Victimes",children:e.jsx("div",{style:{height:440},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:n,margin:{top:60,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:d})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:c.highlightedPlayer===d.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:c.highlightedPlayer===d.value?14:13,fontWeight:c.highlightedPlayer===d.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:d.value})}),e.jsx($,{label:{value:"Nombre total de morts",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(me,{})}),T.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"deaths",fill:b[t],onClick:m=>{const d={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};g!=="Tous les camps"&&(d.campFilter={selectedCamp:g,campFilterMode:"all-assignments"}),x(d)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,n.filter(t=>!t.isHighlightedAddition).length)," des joueurs les plus souvent morts"]})]}),e.jsxs("div",{className:"lycans-graphique-section",children:[e.jsxs("div",{children:[e.jsx("h3",{children:"Meilleur Taux de Survie"}),se&&c.highlightedPlayer&&e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--accent-primary)",fontStyle:"italic",marginTop:"0.25rem",marginBottom:"0.5rem"},children:['🎯 "',c.highlightedPlayer,'" affiché en plus du top 15']})]}),e.jsxs("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem",marginBottom:"1rem"},children:[e.jsx("label",{htmlFor:"min-games-survival-select",style:{color:"var(--text-secondary)",fontSize:"0.9rem"},children:"Min. parties:"}),e.jsx("select",{id:"min-games-survival-select",value:p,onChange:t=>E(Number(t.target.value)),style:{background:"var(--bg-tertiary)",color:"var(--text-primary)",border:"1px solid var(--border-color)",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.9rem"},children:le.map(t=>e.jsx("option",{value:t,children:t},t))})]}),e.jsx(U,{title:"Meilleur Taux de Survie",children:e.jsx("div",{style:{height:400},children:e.jsx(Z,{width:"100%",height:"100%",children:e.jsxs(G,{data:S,margin:{top:20,right:30,left:20,bottom:10},children:[e.jsx(w,{strokeDasharray:"3 3"}),e.jsx(q,{dataKey:"name",angle:-45,textAnchor:"end",height:80,interval:0,tick:({x:t,y:m,payload:d})=>e.jsx("text",{x:t,y:m,dy:16,textAnchor:"end",fill:c.highlightedPlayer===d.value?"var(--accent-primary)":"var(--text-secondary)",fontSize:c.highlightedPlayer===d.value?14:13,fontWeight:c.highlightedPlayer===d.value?"bold":"italic",transform:`rotate(-45 ${t} ${m})`,children:d.value})}),e.jsx($,{label:{value:"Taux de survie (%)",angle:270,position:"left",style:{textAnchor:"middle"}}}),e.jsx(X,{content:e.jsx(ue,{})}),T.map(t=>e.jsx(J,{dataKey:t,name:t,stackId:"survivalRate",fill:b[t],onClick:m=>{const d={selectedPlayer:m?.name,fromComponent:"Statistiques de Mort"};g!=="Tous les camps"&&(d.campFilter={selectedCamp:g,campFilterMode:"all-assignments"}),x(d)}},t))]})})})}),e.jsxs("p",{style:{fontSize:"0.8rem",color:"var(--text-secondary)",textAlign:"center",marginTop:"0.5rem"},children:["Top ",Math.min(15,S.filter(t=>!t.isHighlightedAddition).length)," des joueurs avec le plus haut taux de survie (ayant au moins ",p," partie",p>1?"s":"",")"]})]})]}),e.jsx("div",{className:"lycans-section-description",style:{marginTop:"1.5rem"},children:e.jsxs("p",{children:[e.jsx("strong",{children:"Note : "}),"Données en cours de récupération (données partielles)."]})})]})}export{Oe as DeathStatisticsChart};
