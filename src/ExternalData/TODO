New Statistics Components
1. Role Performance Deep Dive

const RoleEfficiencyChart = lazy(() => import('./components/rolestats/RoleEfficiencyChart'))

Win rates by specific roles (Chasseur, Alchimiste, etc.)
Role impact analysis - which roles change game outcomes most
Meta evolution - how role usage and effectiveness changed over time
Role synergy matrix - which role combinations work best together

2. Temporal Analysis Dashboard

const GameEvolutionChart = lazy(() => import('./components/temporal/GameEvolutionChart'))

Monthly/seasonal trends in win rates, game duration, player performance
Learning curves - how players improve over time
Meta shifts - changes in strategies and success patterns
Anniversary milestones with special statistics

3. Social Network Analysis

const PlayerRelationshipChart = lazy(() => import('./components/social/PlayerRelationshipChart'))

Who plays well together - success rates by player combinations
Betrayal patterns - analyzing teammate eliminations
Alliance formation - frequent team-ups and their outcomes
Player influence networks - who affects others' play styles
Advanced Analytical Components

4. Predictive Analytics

const GamePredictionChart = lazy(() => import('./components/prediction/GamePredictionChart'))

Win probability calculator based on current players/roles
Optimal role distribution suggestions
Player matchmaking for balanced games
Comeback analysis - conditions that lead to dramatic reversals

5. Performance Comparison Tool

const PlayerVersusChart = lazy(() => import('./components/comparison/PlayerVersusChart'))
Head-to-head player comparisons with radar charts
Performance vs. average benchmarking
Skill ceiling analysis - identifying improvement areas
Play style clustering - grouping similar players

6. Game Quality Metrics

const GameHealthChart = lazy(() => import('./components/health/GameHealthChart'))

Balance analysis - are games fair and competitive?
Excitement factor - close games vs. blowouts
Optimal game length analysis
Player engagement trends
Interactive Features

7. What-If Scenario Builder

const ScenarioBuilder = lazy(() => import('./components/scenario/ScenarioBuilder'))

Alternate history - "what if X player was Y role?"
Strategy simulation - test different approaches
Role rebalancing impact analysis
Tournament bracket predictor

8. Achievement System

const AchievementTracker = lazy(() => import('./components/achievements/AchievementTracker'))

Milestone tracking (100th game, perfect month, etc.)
Unique achievements (longest survival, most eliminations in one game)
Progress visualization toward goals
Leaderboards for various categories
Data Insights Components

9. Pattern Recognition Dashboard

const PatternAnalysisChart = lazy(() => import('./components/patterns/PatternAnalysisChart'))

Voting patterns - who votes for whom and when
Elimination sequences - common early/mid/late game patterns
Communication analysis - if chat data were available
Behavioral fingerprinting - identifying players by play style

10. Statistical Anomalies

const AnomalyDetectionChart = lazy(() => import('./components/anomalies/AnomalyDetectionChart'))

Outlier games - unusually long/short or unbalanced
Statistical impossibilities - highlighting remarkable events
Streak analysis - hot and cold periods
Lucky vs. skilled performance separation
Implementation Priority
Based on data richness and user value:

High Priority: Role Performance, Temporal Analysis, Player Comparison
Medium Priority: Social Network Analysis, Game Quality Metrics
Future Enhancements: Predictive Analytics, Achievement System
Each would integrate with the existing navigation system and follow the established patterns:

Use useNavigation() for drill-downs to GameDetailsChart
Respect SettingsContext filters
Follow the lazy loading pattern
Maintain French language consistency